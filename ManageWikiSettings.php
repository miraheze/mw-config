<?php

/**
 * ManageWiki settings are added using the variable below.
 *
 * associativeKey: the associative array key. Only used if you are setting the associative value.
 * name: the displayed name of the setting on Special:ManageWiki/settings.
 * from: a text entry of which extension is required for this setting to work. If added by MediaWiki core, use 'mediawiki'.
 * global: set to true if the setting is added by MediaWiki core or a global extension or skin.
 * type: configuration type. See below for available options.
 * overridedefault: a string/array override default when no existing value exist.
 * help: string providing help information for the setting.
 * section: string name of groupings for settings.
 * requires: an array, string, or integer. See below for available types that can be used here.
 *
 * 'type' can be one of:
 *
 * check: adds a checkbox.
 * database: adds a textbox with input validation, verifying that its value is a valid database name.
 * float: adds a textbox with float validation (requires: minfloat and maxfloat which are minimum and maximum float values).
 * integer: adds a textbox with integer validation (requires: minint and maxint which are minimum and maximum integer values).
 * integers: see above, just supports multiple and does not require a min or max integer value.
 * language: adds a drop-down for language selection (all which are known to MediaWiki).
 * list: adds a list of options (requires: options, which is an array in form of display => internal value).
 * list-multi: see above, just that multiple can be selected.
 * list-multi-bool: see above, just outputs are $this => $bool.
 * matrix: adds an array of "columns" and "rows". Columns are the top array and rows will be the values.
 * preferences: adds a drop-down selection box for selecting multiple user preferences.
 * skin: adds a drop-down selection box for selecting a single enabled skin.
 * skins: adds a drop-down selection box for selecting multiple enabled skins.
 * text: adds a single line text entry.
 * texts: see above, except multiple text values for inserting into a configuration array.
 * timezone: adds a drop-down for timezone selection.
 * url: adds a single line text entry which requires a full URL.
 * user: adds an autocomplete text box to select a single user on the wiki.
 * users: see above, except multiple users.
 * usergroups: adds a drop-down selection box for selecting multiple user groups.
 * userrights: adds a drop-down selection box for selecting multiple user rights.
 * wikipage: add a textbox which will return an autocomplete drop-down list of wikipages. Returns standardised MediaWiki pages.
 * wikipages: see above, except multiple wikipages.
 *
 * 'requires' can be one of:
 *
 * activeusers: max integer amount of active users a wiki may have in order to be able to modify this setting.
 * articles: max integer amount of articles a wiki may have in order to be able to modify this setting.
 * extensions: array of extensions that must be enabled in order to modify this setting. Different from 'from'. Only use if it requires more than one extension.
 * pages: max integer amount of pages a wiki may have in order to be able to modify this setting.
 * permissions: array of permissions a user must have to be able to modify this setting. Regardless of this value, a user must always have the managewiki permission.
 * visibility: an array. See below for available options.
 * settings: an array.
 *
 * 'visibility' can be one of:
 *
 * state: a string. Can be either 'private' or 'public'. If set to 'private' this setting will only be visible on private wikis. If set to 'public' it will only be visible on public wikis.
 * permissions: an array. Set to an array of permissions required for the setting to be visible.
 */

$wgManageWikiSettings = [
	// Anti-Spam
	'wgAbuseFilterActions' => [
		'name' => 'AbuseFilter Actions',
		'from' => 'abusefilter',
		'global' => true,
		'type' => 'list-multi-bool',
		'allopts' => [
			'block',
			'blockautopromote',
			'degroup',
			'disallow',
			'tag',
			'throttle',
			'warn',
		],
		'options' => [
			'Block' => 'block',
			'BlockAutopromote' => 'blockautopromote',
			'Degroup' => 'degroup',
			'Disallow' => 'disallow',
			'Tag' => 'tag',
			'Throttle' => 'throttle',
			'Warn' => 'warn',
		],
		'overridedefault' => [
			'block' => true,
			'blockautopromote' => true,
			'degroup' => true,
			'disallow' => true,
			'rangeblock' => false,
			'tag' => true,
			'throttle' => true,
			'warn' => true,
		],
		'section' => 'anti-spam',
		'help' => 'The possible actions that can be taken by abuse filters. When adding a new action, check if it is restricted in <code>$wgAbuseFilterActionRestrictions</code> and, if it is, don\'t forget to add the abusefilter-modify-restricted right to the appropriate user groups.',
		'requires' => [],
	],
	'wgAbuseFilterNotifications' => [
		'name' => 'AbuseFilter Notifications',
		'from' => 'abusefilter',
		'global' => true,
		'type' => 'list',
		'options' => [
			'False' => false,
			'Recent Changes' => 'rc',
			'UDP' => 'udp',
			'RC and UDP' => 'rcandudp',
		],
		'overridedefault' => false,
		'help' => 'Pings AbuseFilter hits to Special:RecentChanges, UDP, or both.',
		'section' => 'anti-spam',
		'requires' => [],
	],
	'wgAbuseFilterNotificationsPrivate' => [
		'name' => 'Private AbuseFilter Notifications',
		'from' => 'abusefilter',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'help' => 'Pings hits from private AbuseFilters to Special:RecentChanges.',
		'section' => 'anti-spam',
		'requires' => [
			'settings' => [
				'setting' => 'wgAbuseFilterNotifications',
				'value' => [
					'rc',
					'rcandudp',
					'udp',
				],

			],
		],
	],
	'wgAutoblockExpiry' => [
		'name' => 'Autoblock Expiry',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 315360000,
		'overridedefault' => 86400,
		'section' => 'anti-spam',
		'help' => 'Number of seconds before autoblock entries expire. Minimum value allowed: 0, default: 1 day (86400), maximum: 10 years (315360000).',
		'requires' => [],
	],
	'wgBlockAllowsUTEdit' => [
		'name' => 'Allows blocking users to restrict talk page access',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Allows the blocking user to grant talk page edit access for the blocked user',
		'requires' => [],
	],
	'wgCookieSetOnAutoblock' => [
		'name' => 'Cookie set on autoblock',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Determines whether to set a cookie when a user is autoblocked. Doing so means that a blocked user, even after logging out and moving to a new IP address, will still be blocked.',
		'requires' => [],
	],
	'wgCookieSetOnIpBlock' => [
		'name' => 'Cookie set on IP block',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Determines whether to set a cookie when an IP user is blocked. Doing so means that a blocked user, even after moving to a new IP address, will still be blocked.',
		'requires' => [],
	],
	'wgEmailConfirmToEdit' => [
		'name' => 'Email Confirm To Edit',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'Require users to confirm email address before they can edit. This effectively disables IP editing.',
		'requires' => [],
	],
	'wgRestrictionTypes' => [
		'name' => 'Restriction Types',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'Edit' => 'edit',
			'Move' => 'move',
			'Create' => 'create',
			'Upload' => 'upload',
			'Delete' => 'delete',
			'Protect' => 'protect',
			'Edit Content Model' => 'editcontentmodel',
		],
		'overridedefault' => [
			'create',
			'edit',
			'move',
			'upload',
		],
		'section' => 'anti-spam',
		'help' => 'Actions that can be restricted.',
		'requires' => [],
	],
	'wgRSSUserAgent' => [
		'name' => 'RSS User Agent',
		'from' => 'rss',
		'type' => 'text',
		'overridedefault' => 'MediaWiki RSS extension',
		'section' => 'other',
		'help' => 'The User Agent that MediaWiki will use to fetch RSS feeds.',
		'requires' => [
			'extensions' => [
				'rss',
			],
		],
	],
	'wgProtectSiteLimit' => [
		'name' => 'Protect Site Limit',
		'from' => 'protectsite',
		'type' => 'list',
		'options' => [
			'indefinite' => 'indefinite',
			'10 year' => '10 year',
			'1 week' => '1 week',
		],
		'overridedefault' => '1 week',
		'section' => 'anti-spam',
		'help' => 'Maximum time allowed for protection of the site.',
		'requires' => [],
	],
	'wgProtectSiteDefaultTimeout' => [
		'name' => 'ProtectSite Default Timeout',
		'from' => 'protectsite',
		'type' => 'list',
		'options' => [
			'1 year' => '1 year',
			'6 month' => '6 month',
			'3 month' => '3 month',
			'1 month' => '1 month',
			'1 week' => '1 week',
			'3 day' => '3 day',
			'1 day' => '1 day',
			'1 hour' => '1 hour',
		],
		'overridedefault' => '1 hour',
		'section' => 'anti-spam',
		'help' => 'Default timeout, 1 hour by default.',
		'requires' => [],
	],
	'egApprovedRevsAutomaticApprovals' => [
		'name' => 'Automatically approve new revisions',
		'from' => 'approvedrevs',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Uncheck this box to require new revisions to be manually approved even if made by an administrator',
		'requires' => [],
	],
	'egApprovedRevsBlankIfUnapproved' => [
		'name' => 'Display unapproved pages as blank',
		'from' => 'approvedrevs',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'Make pages without approved revisions show up as blank',
		'requires' => [],
	],
	'egApprovedRevsBlankFileIfUnapproved' => [
		'name' => 'Do not display unapproved images',
		'from' => 'approvedrevs',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'Makes files without approved versions not show up when embedded',
		'requires' => [],
	],
	'egApprovedRevsFileAutomaticApprovals' => [
		'name' => 'Automatically approve new files',
		'from' => 'approvedrevs',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Uncheck this to require new files to be manually approved even if made by an administrator',
		'requires' => [],
	],
	'egApprovedRevsFileShowApproveLatest' => [
		'name' => 'Show a link to approve the latest revision in Special:ApprovedRevs',
		'from' => 'approvedrevs',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'This option makes a link show up on Special:ApprovedRevs to approve the latest revision of a file',
		'requires' => [],
	],
	'egApprovedRevsShowNotApprovedMessage' => [
		'name' => 'Show not approved message',
		'from' => 'approvedrevs',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'This option makes a message appear on unapproved revisions indicating this revision has not been approved',
		'requires' => [],
	],
	'wgFlaggedRevsProtection' => [
		'name' => 'Flagged Revs Protection',
		'from' => 'flaggedrevs',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'This enables Flagged Revs Protection.',
		'requires' => [],
	],
	'wgFlaggedRevsOverride' => [
		'name' => 'Flagged Revs Override',
		'from' => 'flaggedrevs',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Is a "stable version" used as the default display version for all pages in reviewable namespaces?',
		'requires' => [],
	],
	'wgFlaggedRevsAutoReview' => [
		'name' => 'FlaggedRevs Auto Review',
		'from' => 'flaggedrevs',
		'type' => 'list',
		'options' => [
			'No Auto-Review' => 0,
			'Changes' => 1,
			'Creation' => 2,
			'Changes and Creation' => 3,
		],
		'overridedefault' => 3,
		'section' => 'anti-spam',
		'help' => 'Auto-review settings for edits/new pages.',
		'requires' => [],
	],
	'wgSimpleFlaggedRevsUI' => [
		'name' => 'Simple FlaggedRevs UI',
		'from' => 'flaggedrevs',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'When enabled, this will only distinguish "checked", "quality", and unreviewed.',
		'requires' => [],
	],
	'wgFlaggedRevsLowProfile' => [
		'name' => 'FlaggedRevs Low Profile',
		'from' => 'flaggedrevs',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'For visitors, only show tags/icons for unreviewed/outdated pages when enabled.',
		'requires' => [],
	],
	'wgModerationPreviewLink' => [
		'name' => 'Moderation Preview Link',
		'from' => 'moderation',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'If enabled, Preview link is shown for pending edits. Normally you shouldn\'t enable this (when following Best Practices, approval/rejection depends on content, not formatting).',
		'requires' => [],
	],
	'wgModerationEnableEditChange' => [
		'name' => 'Moderation Enable Edit Change',
		'from' => 'moderation',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'If enabled, moderators are allowed to edit pending changes before approving. DANGEROUS: moderator can accidentally delete the text of pending change. Enable this only when you use Moderation for pre-publish review.',
		'requires' => [],
	],
	'wgModerationEmail' => [
		'name' => 'Moderation Email',
		'from' => 'moderation',
		'type' => 'text',
		'overridedefault' => $wgPasswordSender,
		'section' => 'anti-spam',
		'help' => 'Email address to send moderation notifications to.',
		'requires' => [
			'visibility' => [
				'permissions' => [
					'managewiki-settings',
				],
			],
		],
	],

	// Beta Feature related stuff
	'wgEchoUseCrossWikiBetaFeature' => [
		'name' => 'Enable Echo Cross Wiki Beta Feature',
		'from' => 'echo',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'beta',
		'help' => 'Feature flag for the cross-wiki notifications beta feature.',
		'requires' => [],
	],
	'wgMediaViewerIsInBeta' => [
		'name' => 'Enable Media Viewer Beta Mode',
		'from' => 'multimediaviewer',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'beta',
		'help' => 'This makes Media Viewer a beta feature thus this will not be enabled for all users.',
		'requires' => [],
	],
	'wgPopupsReferencePreviewsBetaFeature' => [
		'name' => 'Popups Reference Previews Beta Feature',
		'from' => 'popups',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'beta',
		'help' => 'Whether Reference Previews should be available as a Beta feature. If false, Reference Previews are enabled for all users by default.',
		'requires' => [],
	],
	'wgPopupsOptInDefaultState' => [
		'name' => 'Popups Opt In Default State',
		'from' => 'popups',
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 1,
		'overridedefault' => 0,
		'section' => 'beta',
		'help' => 'Default Page Previews visibility. Has to be a string as a compatibility with beta feature settings.',
		'requires' => [],
	],
	'wgVisualEditorEnableDiffPageBetaFeature' => [
		'name' => 'Enable VisualEditor Diff Page Beta Feature',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'beta',
		'help' => 'Enable the new visual mode as a beta feature on revision difference pages.',
		'requires' => [],
	],
	'wgVisualEditorEnableWikitextBetaFeature' => [
		'name' => 'Enable VisualEditor Wikitext Beta Feature',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'beta',
		'help' => 'Enable the new wikitext mode inside the visual editor as a beta feature. It has many of the tools present in the visual editor, uses a similar design, and allows better switching between the two.',
		'requires' => [],
	],
	'wgVisualEditorShowBetaWelcome' => [
		'name' => 'Enable VisualEditor Show Beta Welcome',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'beta',
		'help' => 'Shows a beta welcome for users of VisualEditor.',
		'requires' => [],
	],

	// Categories
	'wgCategoryPagingLimit' => [
		'name' => 'Category Paging Limit',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 25,
		'maxint' => 5000,
		'overridedefault' => 200,
		'section' => 'categories',
		'help' => 'Paging limit for items in categories.',
		'requires' => [],
	],
	'wgMSCS_WarnNoCategories' => [
		'name' => 'MsCatSelect warn no categories',
		'from' => 'mscatselect',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'categories',
		'help' => 'By default, if you try to save a page that has no categories assigned, MsCatSelect will ask for confirmation. If you wish to avoid this, unset this option.',
		'requires' => [],
	],
	'wgCategoryTreeDefaultMode' => [
		'name' => 'Category Tree Default Mode',
		'from' => 'categorytree',
		'type' => 'list',
		'overridedefault' => 0,
		'section' => 'categories',
		'options' => [
			'Category' => 0,
			'Pages' => 10,
			'All' => 20,
			'Parents' => 100,
		],
		'help' => 'the default mode to use when no mode attribute is specified in a <categorytree> tag. You also need to set "Category Tree Category Page Mode" if you select the page mode.',
		'requires' => [],
	],
	'wgCategoryTreeCategoryPageMode' => [
		'name' => 'Category Tree Category Page Mode',
		'from' => 'categorytree',
		'type' => 'list',
		'overridedefault' => 0,
		'section' => 'categories',
		'options' => [
			'Category' => 0,
			'Pages' => 10,
			'All' => 20,
			'Parents' => 100,
		],
		'help' => 'The mode to use when rendering trees on category pages.',
		'requires' => [],
	],

	// Discussion
	'wgChatLinkUsernames' => [
		'name' => 'Chat Link to Usernames',
		'from' => 'mediawikichat',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'Link to user pages in the main chat window.',
		'requires' => [],
	],
	'wgChatMeCommand' => [
		'name' => 'Chat Me Command',
		'from' => 'mediawikichat',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'Enable "/me <text>" command that prints a status-type message.',
		'requires' => [],
	],
	'wgCommentStreamsEnableTalk' => [
		'name' => 'CommentStreams Enable Talk',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'Enable in talk namespaces',
		'requires' => [],
	],
	'wgCommentStreamsEnableSearch' => [
		'name' => 'CommentStreams Enable Search',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'discussion',
		'help' => 'Allow comments and their titles to appear in search results and search auto-complete?',
		'requires' => [],
	],
	'wgCommentStreamsNewestStreamsOnTop' => [
		'name' => 'CommentStreams Newest Streams On Top',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'discussion',
		'help' => 'Show newer comments first',
		'requires' => [],
	],
	'wgCommentStreamsUserAvatarPropertyName' => [
		'name' => 'CommentStreams User Avatar Property Name',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'If SocialProfile is enabled, it will display an avatar',
		'requires' => [],
	],
	'wgCommentStreamsEnableVoting' => [
		'name' => 'CommentStreams Enable Voting',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'Allows logged in users to vote thumbs up, thumbs down, or neither on top level comments.',
		'requires' => [],
	],
	'wgCommentStreamsModeratorFastDelete' => [
		'name' => 'CommentStreams Moderator Fast Delete',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'allows users with csdelete right to delete a comment and all of its replies in one action rather than having to individually delete all of the replies first.',
		'requires' => [],
	],
	'wgCommentsSortDescending' => [
		'name' => 'Sort Comments by Descending',
		'from' => 'comments',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'This sorts comments by descending date, with the new comment box and most recent comments at the top when enabled.',
		'requires' => [],
	],
	'wgWebChatServer' => [
		'name' => 'WebChat Server',
		'from' => 'webchat',
		'type' => 'text',
		'overridedefault' => '',
		'section' => 'discussion',
		'help' => 'IRC Server to connect to, not required when using the Libera web client.',
		'requires' => [],
	],
	'wgWebChatChannel' => [
		'name' => 'WebChat Channel',
		'from' => 'webchat',
		'type' => 'text',
		'overridedefault' => '',
		'section' => 'discussion',
		'help' => 'Channel to connect to.',
		'requires' => [],
	],
	'wgWebChatClient' => [
		'name' => 'WebChat Client',
		'from' => 'webchat',
		'type' => 'list',
		'options' => [
			'Libera' => 'LiberaChat',
			'Other Server' => 'Mibbit',
		],
		'overridedefault' => 'LiberaChat',
		'section' => 'discussion',
		'help' => 'This sets the web client to use. If you are not using Libera, select Other Server.',
		'requires' => [],
	],
	'wgWikiForumAllowAnonymous' => [
		'name' => 'WikiForum Allow Anonymous',
		'from' => 'wikiforum',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'discussion',
		'help' => 'Allow Anonymous (users who are not logged in) to use WikiForum',
		'requires' => [],
	],

	// Editing
	'wmgWikiLicense' => [
		'name' => 'Content License',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'All Rights Reserved' => 'arr',
			'Creative Commons BY 4.0' => 'cc-by',
			'Creative Commons BY-NC 4.0' => 'cc-by-nc',
			'Creative Commons BY-ND 4.0' => 'cc-by-nd',
			'Creative Commons BY-SA 4.0' => 'cc-by-sa',
			'Creative Commons BY-SA 2.0 Korea' => 'cc-by-sa-2-0-kr',
			'Creative Commons BY-SA-NC 4.0' => 'cc-by-sa-nc',
			'Creative Commons BY-NC-ND 4.0' => 'cc-by-nc-nd',
			'Public Domain' => 'cc-pd',
			'GNU General Public V3' => 'gpl-v3',
			'GNU Free Document License 1.3' => 'gfdl',
			'No license provided' => 'empty',
		],
		'overridedefault' => 'cc-by-sa',
		'section' => 'editing',
		'help' => 'Each wiki on Miraheze is by default licensed under CC-BY-SA 4.0 although this can be changed to another supported license. If you would like to release the contributions on your wiki under another license, please let us know so that we can make it available to you. Be aware that changing the license on your wiki can have an impact on your community and should not be done lightly.',
		'requires' => [],
	],
	'wgActiveUserDays' => [
		'name' => 'Active User Days',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 400,
		'overridedefault' => 30,
		'section' => 'editing',
		'help' => 'The number of days within which a person must make edits to be considered an "active" user.',
		'requires' => [],
	],
	'wgShowCreditsIfMax' => [
		'name' => 'Editing attribution',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'If there are more authors than specified in $wgMaxCredits, link the rest in a separate credits page.',
		'requires' => [],
	],
	'wgWikiEditorRealtimePreview' => [
		'name' => 'Enable WikiEditor Realtime Preview mode?',
		'from' => 'wikieditor',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Enables WikiEditor\'s Realtime Preview mode which shows you a realtime preview of your edits in a side pane.',
		'requires' => [],
	],
	'wgVisualEditorEnableWikitext' => [
		'name' => 'Enable VisualEditor Wikitext mode',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'This option allow you to read Wikitext syntax on VisualEditor.',
		'requires' => [],
	],
	'wgVisualEditorUseSingleEditTab' => [
		'name' => 'VisualEditor Use Single Edit Tab',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Shows only the "edit" tab. Uses VisualEditor by default if "Make VisualEditor the default editor for all" is set, otherwise defaults to Wikitext.',
		'requires' => [],
	],
	'wgVisualEditorEnableDiffPage' => [
		'name' => 'Enable VisualEditor Diff Page',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Enable the new visual mode on revision difference pages by default (not Beta).',
		'requires' => [],
	],
	'wgVisualEditorTransclusionDialogSuggestedValues' => [
		'name' => 'Enable VisualEditor Transclusion Dialog Suggested Values',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Enable suggested values in the transclusion dialog. (experimental)',
		'requires' => [],
	],
	'wgVisualEditorTransclusionDialogInlineDescriptions' => [
		'name' => 'Enable VisualEditor Transclusion Dialog Inline Descriptions',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Enable inline parameter descriptions in the transclusion dialog. (experimental)',
		'requires' => [],
	],
	'wgVisualEditorTransclusionDialogBackButton' => [
		'name' => 'Enable VisualEditor Transclusion Dialog Back Button',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Enable the back button in the transclusion dialog when inserting a new template. (experimental)',
		'requires' => [],
	],
	'wgVisualEditorTransclusionDialogNewSidebar' => [
		'name' => 'Enable VisualEditor Transclusion Dialog New Sidebar',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Enable the new sidebar in the transclusion dialog. (experimental)',
		'requires' => [],
	],
	'wgVisualEditorTemplateSearchImprovements' => [
		'name' => 'Enable VisualEditor Template Search Improvements',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Enable various changes around searching for template names. (experimental)',
		'requires' => [],
	],
	'wgMFCollapseSectionsByDefault' => [
		'name' => 'Collapse sections by default on MobileFrontend',
		'from' => 'mobilefrontend',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Enabling this will collapse sections by default when the page loads when using MobileFrontend.',
		'requires' => [],
	],
	'wgMFDefaultEditor' => [
		'name' => 'Default MobileFrontend Editor',
		'from' => 'mobilefrontend',
		'type' => 'list',
		'overridedefault' => 'preference',
		'options' => [
			'Source editor' => 'source',
			'Visual editor' => 'visual',
			'Default to user preferences' => 'preference',
		],
		'section' => 'editing',
		'help' => 'Default mobile editor to use when there is no user preference set.',
		'requires' => [],
	],
	'wgCodeEditorEnableCore' => [
		'name' => 'CodeEditor Enable Core',
		'from' => 'codeeditor',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'To disable the editor on JavaScript and CSS pages in the MediaWiki, User and other core namespaces, unset this option.',
		'requires' => [],
	],
	'wgScribuntoUseCodeEditor' => [
		'name' => 'Scribunto Use CodeEditor',
		'from' => 'codeeditor',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Set this to use it when editing Module pages.',
		'requires' => [],
	],
	'wgScribuntoUseGeSHi' => [
		'name' => 'Scribunto Use GeSHi (SyntaxHighlight)',
		'from' => 'syntaxhighlight_geshi',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Use SyntaxHighlight_GeSHi extension to highlight syntax.',
		'requires' => [],
	],
	'wgPageCreationLog' => [
		'name' => 'Page Creation Log',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Whether to maintain a log of new page creations, which can be viewed at Special:Log/create.',
		'requires' => [],
	],
	'wgWatchlistExpiry' => [
		'name' => 'Allow Watchlist Expiry Time',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Whether to allow users to select a expiry time when adding an item to their watchlist',
		'requires' => [],
	],
	'wgHeaderTabsRenderSingleTab' => [
		'name' => 'Header Tabs Render Single Tab',
		'from' => 'headertabs',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Whether Header Tabs should only activate if a single top-level header is found.',
		'requires' => [],
	],
	'wgHeaderTabsDisableDefaultToc' => [
		'name' => 'Header Tabs Disable Default Toc',
		'from' => 'headertabs',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Whether Header Tabs should disable the MediaWiki article\'s table of contents when tabs are enabled for a given article.',
		'requires' => [],
	],
	'wgHeaderTabsGenerateTabTocs' => [
		'name' => 'Header Tabs Generate Tab Tocs',
		'from' => 'headertabs',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Whether Header Tabs should try to generate a TOC for each tab.',
		'requires' => [],
	],
	'wgHeaderTabsEditTabLink' => [
		'name' => 'Header Tabs Edit Tab Link',
		'from' => 'headertabs',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Whether Header Tabs should add an edit link to the right of the tabs which let you edit only the tabs\' text.',
		'requires' => [],
	],
	'wgArticleCreationLandingPage' => [
		'name' => 'Article Creation Landing Page',
		'from' => 'articlecreationworkflow',
		'type' => 'wikipage',
		'exists' => false,
		'overridedefault' => 'Project:Article wizard',
		'section' => 'editing',
		'help' => 'The name of the wiki page to which users should be redirected if intercepted.',
		'requires' => [],
	],
	'wgRPRatingPageBlacklist' => [
		'name' => 'Rating Page Blacklist',
		'from' => 'ratepage',
		'type' => 'wikipages',
		'exists' => false,
		'overridedefault' => [],
		'section' => 'editing',
		'help' => 'Page titles that are not allowed to be rated.',
		'requires' => [],
	],
	'wgRPAddSidebarSection' => [
		'name' => 'Rate Page Add Sidebar Section',
		'from' => 'ratepage',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Whether to add the default sidebar section for the widget.',
		'requires' => [],
	],
	'wgRPSidebarPosition' => [
		'name' => 'Rate Page Sidebar Position',
		'from' => 'ratepage',
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 9,
		'overridedefault' => 2,
		'section' => 'editing',
		'help' => 'Integer indicating where in the sidebar should the widget be placed.',
		'requires' => [],
	],
	'wgRPShowResultsBeforeVoting' => [
		'name' => 'Rate Page Show Results Before Voting',
		'from' => 'ratepage',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Whether to show page\'s rating before the user votes.',
		'requires' => [],
	],
	'wgPageFormsRenameEditTabs' => [
		'name' => 'Page Forms Rename Edit Tabs',
		'from' => 'pageforms',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Rename the "edit with form" tab to "edit", and the "edit" tab to "edit source" (in whatever language the wiki is being viewed in).',
		'requires' => [],
	],
	'wgPageFormsRenameMainEditTab' => [
		'name' => 'Page Forms Rename Main Edit Tab',
		'from' => 'pageforms',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Rename only the "edit" tab to "edit source" (in whatever language the wiki is being viewed in).',
		'requires' => [],
	],
	'wgPageFormsSimpleUpload' => [
		'name' => 'Page Forms Simple Upload',
		'from' => 'pageforms',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Set uploadable fields to use the operating system\'s own uploading directly, instead of using MediaWiki\'s uploading system - this gives the user fewer options, but it is a simpler process, and on mobile devices it can present some interesting options, like uploading photos right after they are taken.',
		'requires' => [],
	],
	'wgPageFormsLinkAllRedLinksToForms' => [
		'name' => 'Page Forms Link All Red Links To Forms',
		'from' => 'pageforms',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'For red links not defined by #formredlink and not pointing to a form-associated namespace, have every such link point to a helper page, that lets the user choose which of the wiki\'s forms to use to create this page - or to use no form at all.',
		'requires' => [],
	],
	'wgNamespacePreloadDoExpansion' => [
		'name' => 'Namespace Preload Do Expansion',
		'from' => 'namespacepreload',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Whether to expand templates of the preloaded text.',
		'requires' => [],
	],
	'wgCreatePageUwUseVE' => [
		'name' => 'CreatePageUw Use VisualEditor',
		'from' => 'createpageuw',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'If enabled, user will be redirected to VisualEditor.',
		'requires' => [],
	],
	'wgCleanSignatures' => [
		'name' => 'Clean Signatures',
		'from' => 'mediawiki',
		'type' => 'check',
		'global' => true,
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'If enabled, removes (substitutes) templates in signatures.',
		'requires' => [],
	],
	'wgTabberNeueUpdateLocationOnTabChange' => [
		'name' => 'TabberNeue Update Location On Tab Change',
		'from' => 'tabberneue',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'If enabled, when a tab is selected, the URL displayed on the browser changes. Opening this URL makes that tab initially selected.',
		'requires' => [],
	],

	// Links
	'wgArticleCountMethod' => [
		'name' => 'Article Count Method',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'Link' => 'link',
			'Any' => 'any',
		],
		'overridedefault' => 'link',
		'section' => 'links',
		'help' => 'Method used to determine if a page in a content namespace should be counted as a valid content page (article).',
		'requires' => [],
		'script' => [
			"$IP/maintenance/updateArticleCount.php" => [
				'update' => false,
			],
		],
	],
	'wgCapitalLinks' => [
		'name' => 'Capital Links',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'links',
		'help' => 'Unset this to avoid forcing the first letter of links to capitals. Warning: This may break your existing wiki links.',
		'requires' => [],
	],
	'wgDisplayTitleFollowRedirects' => [
		'name' => 'Display Title Follow Redirects',
		'from' => 'displaytitle',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'links',
		'help' => 'If enabled, the Display Title extension will follow redirects.',
		'requires' => [],
	],
	'wgDisplayTitleHideSubtitle' => [
		'name' => 'Display Title Hide Subtitle',
		'from' => 'displaytitle',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'links',
		'help' => 'Enable this to hide the page\'s original title as a subtitle below the title bar, shown by the Display Title extension.',
		'requires' => [],
	],
	'wgEnableCanonicalServerLink' => [
		'name' => 'Enable Canonical Server Link',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'links',
		'help' => 'Output a <link rel="canonical"> tag on every page indicating the canonical server which should be used, i.e. $wgServer or $wgCanonicalServer.',
		'requires' => [],
	],
	'wgExternalLinkTarget' => [
		'name' => 'External Link Target',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'Blank' => '_blank',
			'Default' => false,
		],
		'overridedefault' => false,
		'section' => 'links',
		'help' => 'Set a default target for external links.',
		'requires' => [],
	],
	'wgNoFollowLinks' => [
		'name' => 'NoFollow Links',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'links',
		'help' => 'If enabled, external links in wikitext will be given the <code>rel="nofollow"</code> attribute.',
		'requires' => [],
	],
	'wgRottenLinksCurlTimeout' => [
		'name' => 'RottenLinks Timeout Threshold',
		'from' => 'rottenlinks',
		'global' => true,
		'type' => 'integer',
		'minint' => 5,
		'maxint' => 120,
		'overridedefault' => 10,
		'section' => 'links',
		'help' => 'Number of seconds before a RottenLinks request returns no response. Min: 5. Max: 120.',
		'requires' => [],
	],
	'wgRelatedArticlesCardLimit' => [
		'name' => 'Related Articles Card Limit',
		'from' => 'relatedarticles',
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 20,
		'overridedefault' => 3,
		'section' => 'links',
		'help' => 'Maximum number of articles that should be shown in RelatedArticles widget. This limit is derived from limits in TextExtracts and PageImages extensions.',
		'requires' => [],
	],
	'wgRelatedArticlesDescriptionSource' => [
		'name' => 'Related Articles Description Source',
		'from' => 'relatedarticles',
		'type' => 'list',
		'options' => [
			'None' => false,
			'From the central wikibase repository or Extension:ShortDescription.' => 'wikidata',
			'Fetched from the prop=extracts api.' => 'textextracts',
			'From the description page property.' => 'pagedescription',
		],
		'overridedefault' => false,
		'section' => 'links',
		'help' => 'Source to get the page description from.',
		'requires' => [],
	],
	'wmgMirahezeContactPageFooter' => [
		'name' => 'Miraheze Contact Page Footer',
		'from' => 'contactpage',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'links',
		'help' => 'If set, it adds a link to Special:Contact on the footer',
		'requires' => [],
	],

	// Localisation (E.G i18n/timezone etc)
	'wgLocaltimezone' => [
		'name' => 'Timezone',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'timezone',
		'overridedefault' => 'UTC',
		'section' => 'localisation',
		'help' => 'This will adapt your wikis time over clock to whatever timezone you choose for all users, however it can be changed through user\'s preferences.',
		'requires' => [],
	],
	'wgAmericanDates' => [
		'name' => 'American Dates',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'localisation',
		'help' => 'Use \'mdy\' instead of \'dmy\' as the default date format, e.g. \'May 12\' instead of \'12 May\'?',
		'requires' => [],
	],
	'wgTranslateDocumentationLanguageCode' => [
		'name' => 'Translate Documentation Language Code',
		'from' => 'translate',
		'type' => 'list',
		'options' => [
			'info' => 'info',
			'No Documentation' => false,
			'qqq' => 'qqq',
		],
		'overridedefault' => false,
		'section' => 'localisation',
		'help' => 'Language code for message documentation.',
		'requires' => [],
	],
	'wgTranslateNumerals' => [
		'name' => 'Use Western numerical system',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'localisation',
		'help' => 'Whether to use the Western numerical system (0-9) instead of localised numerics',
		'requires' => [],
	],
	'wgTranslatePageTranslationULS' => [
		'name' => 'Translate Page Translation ULS',
		'from' => 'translate',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'localisation',
		'help' => 'When user changes interface language via ULS, should we also switch the language of the translatable page?',
		'requires' => [],
	],

	'wgMinervaAlwaysShowLanguageButton' => [
		'name' => 'Minerva Always Show Language Button',
		'from' => 'minervaneue',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'localisation',
		'help' => 'Whether to show the language switcher button even if no languages are available for the page.',
		'requires' => [],
	],
	'wgULSAnonCanChangeLanguage' => [
		'name' => 'ULS Anon Can Change Language',
		'from' => 'universallanguageselector',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'localisation',
		'help' => 'Enabling allows anonymous users to control the language they view the wiki in.',
		'requires' => [],
	],
	'wgULSPosition' => [
		'name' => 'ULS Position',
		'from' => 'universallanguageselector',
		'type' => 'list',
		'options' => [
			'interlanguage' => 'interlanguage',
			'personal' => 'personal',
		],
		'overridedefault' => 'personal',
		'section' => 'localisation',
		'help' => 'The location and the form of the language selection trigger.',
		'requires' => [],
	],
	'wgPageLanguageUseDB' => [
		'name' => 'Enable per page language',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'localisation',
		'help' => 'Allows to change the page language for MediaWiki pages.',
		'requires' => [],
	],
	'wgPageImagesLeadSectionOnly' => [
		'name' => 'Only choose images from section 0',
		'from' => 'pageimages',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'seo',
		'help' => 'Uncheck if the PageImages extension should take into account images from all sections',
		'requires' => [],
	],

	// Maps (E.G navigation)
	'wgKartographerWikivoyageMode' => [
		'name' => 'Kartographer Wikivoyage Mode',
		'from' => 'kartographer',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'maps',
		'help' => 'Enables Wikivoyage mode.',
		'requires' => [],
	],
	'wgKartographerUseMarkerStyle' => [
		'name' => 'Kartographer Use Marker Style',
		'from' => 'kartographer',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'maps',
		'help' => 'Allows Kartographer to extract CSS style to be used by the link from the GeoJSON.',
		'requires' => [],
	],
	'wgKartographerStaticMapframe' => [
		'name' => 'Kartographer Static Mapframe',
		'from' => 'kartographer',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'maps',
		'help' => 'Disables the module that turns <mapframe> tags into interactive mini-maps that can be panned and zoomed without leaving the page.',
		'requires' => [],
	],
	'wgKartographerEnableMapFrame' => [
		'name' => 'Kartographer Enable Mapframe',
		'from' => 'kartographer',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'maps',
		'help' => 'Enables the <mapframe> tag to embed mini-maps directly into pages. The <maplink> tag is always enabled.',
		'requires' => [],
	],

	// Parser Functions
	'wgDLPAllowUnlimitedResults' => [
		'name' => 'DLP Allow Unlimited Results',
		'from' => 'dynamicpagelist',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'parserfunctions',
		'help' => 'Allows unlimited results with DynamicPageList (Wikimedia).',
		'requires' => [],
	],
	'wgDLPAllowUnlimitedCategories' => [
		'name' => 'DLP Allow Unlimited Categories',
		'from' => 'dynamicpagelist',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'parserfunctions',
		'help' => 'Allows unlimited categories with DynamicPageList (Wikimedia).',
		'requires' => [],
	],
	'wgEnableScaryTranscluding' => [
		'name' => 'Enable Scary Transcluding',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Allow templates to be imported/transcluded from another wiki.',
		'requires' => [],
	],
	'wgAllowSlowParserFunctions' => [
		'name' => 'Allow slow parser functions',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'parserfunctions',
		'help' => 'Parser functions are "magic words" that return a value or function, such as time, site details or page names.',
		'requires' => [],
	],
	'wgPFEnableStringFunctions' => [
		'name' => 'Enable string function functionality',
		'from' => 'parserfunctions',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'parserfunctions',
		'help' => 'This option adds support a couple of functions for basic string handling. Example: #pos function returns the position of a given search term within the string. You can learn more in MediaWiki\'s <a href="https://www.mediawiki.org/wiki/Module:String">documentation page</a>',
		'requires' => [],
	],
	'wgAllowDisplayTitle' => [
		'name' => 'Allow Display Title',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Allows use of {{DISPLAYTITLE}} magic word.',
		'requires' => [],
	],
	'wgRestrictDisplayTitle' => [
		'name' => 'Restrict Display Title',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Restrict {{DISPLAYTITLE}} to titles that normalize to the same canonical database key. Wikis with NoTitle extension installed have this config unset.',
		'requires' => [],
	],
	'wgPortableInfoboxResponsiblyOpenCollapsed' => [
		'name' => 'Portable Infobox Responsibly Open Collapsed',
		'from' => 'portableinfobox',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Open collapsed groups when the screen is narrow.',
		'requires' => [],
	],
	'wgPortableInfoboxUseFileDescriptionPage' => [
		'name' => 'Portable Infobox Use File Description Page',
		'from' => 'portableinfobox',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'parserfunctions',
		'help' => 'Make embedded images link to their file description page.',
		'requires' => [],
	],
	'wgShortDescriptionEnableTagline' => [
		'name' => 'ShortDescription Enable Tagline',
		'from' => 'shortdescription',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Enables short descritption in site tagline',
		'requires' => [],
	],
	'wgTabberNeueParseTabName' => [
		'name' => 'TabberNeue Parse Tab Name',
		'from' => 'tabberneue',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'parserfunctions',
		'help' => 'Parse tab name as wikitext.',
		'requires' => [],
	],

	// Media/File
	'wgEnableUploads' => [
		'name' => 'Enable File Uploads',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Check or uncheck this option if you want to enable or disable the upload of files on your wiki.',
		'requires' => [],
	],
	'wgAllowCopyUploads' => [
		'name' => 'Enable File Uploads Through URL',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'By default, Miraheze enables file upload only from a local media but with this option you can upload files remotely from other sites.',
		'requires' => [],
	],
	'wgCopyUploadsFromSpecialUpload' => [
		'name' => 'Enable File Uploads Through URL on Special:Upload',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'This option adds a textbox on Special:Upload enabling you to upload files from any URL.',
		'requires' => [],
	],
	'wgUseQuickInstantCommons' => [
		'name' => 'Enable Wikimedia Commons Files',
		'from' => 'quickinstantcommons',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'This option allows you to use the Wikimedia Commons file database on your wiki. This is a performance optimised version of the core <code>$wgUseInstantCommons</code>.',
		'requires' => [],
	],
	'wgMirahezeCommons' => [
		'name' => 'Enable Miraheze Commons (linking to commons.miraheze.org)',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'This option allows you to use the Miraheze Commons file database on your wiki.',
		'requires' => [],
	],
	'wgShowArchiveThumbnails' => [
		'name' => 'Show Old Thumbnails On Description Page',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Whether to show thumbnails for old images on the image\'s description page.',
		'requires' => [],
	],
	'wgAllowExternalImages' => [
		'name' => 'Allow External Images',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Determines whether or not MediaWiki will allow external images to be rendered inline with text',
		'requires' => [],
	],
	'wgNativeImageLazyLoading' => [
		'name' => 'Native Image Lazy Loading',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Toggles native image lazy loading, via the "loading" attribute.',
		'requires' => [],
	],
	'wgMediaViewerEnableByDefault' => [
		'name' => 'MediaViewer Enable By Default',
		'from' => 'multimediaviewer',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'This enables MediaViewer for everyone.',
		'requires' => [],
	],
	'wgEmbedVideoEnableVideoHandler' => [
		'name' => 'EmbedVideo Enable Video Handler',
		'from' => 'embedvideo',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Enable the video media handlers for displaying embedded video in articles?',
		'requires' => [],
	],
	'wgEmbedVideoFetchExternalThumbnails' => [
		'name' => 'EmbedVideo Fetch External Thumbnails',
		'from' => 'embedvideo',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Fetch thumbnails from external video services?',
		'requires' => [],
	],
	'wgEmbedVideoRequireConsent' => [
		'name' => 'EmbedVideo Require Consent',
		'from' => 'embedvideo',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Only load the iframe if the user clicks it?',
		'requires' => [],
	],
	'wgRPUseMMVModule' => [
		'name' => 'Rate Page Use Multimedia Viewer Module',
		'from' => 'ratepage',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Whether to use the optional MultimediaViewer feature.',
		'requires' => [
			'extensions' => [
				'ratepage',
				'multimediaviewer',
			],
		],
	],
	'wgMSU_checkAutoCat' => [
		'name' => 'MsUpload check auto cat',
		'from' => 'msupload',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'If set, sets the checkbox for adding a category to a page by default.',
		'requires' => [],
	],
	'wgMSU_confirmReplace' => [
		'name' => 'MsUpload confirm replace',
		'from' => 'msupload',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'If set, shows the "Replace file" checkbox.',
		'requires' => [],
	],
	'wgMSU_showAutoCat' => [
		'name' => 'MsUpload show auto cat',
		'from' => 'msupload',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'If set, files uploaded while editing a category page will be added to that category.',
		'requires' => [],
	],
	'wgMSU_useDragDrop' => [
		'name' => 'MsUpload use drag and drop',
		'from' => 'msupload',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'If set, the drag & drop area will be shown.',
		'requires' => [],
	],
	'wgMaxAnimatedGifArea' => [
		'name' => 'Max Animated Gif Area',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => '1.25e7',
		'section' => 'media',
		'help' => 'Force thumbnailing of animated GIFs above this size to a single frame instead of an animated thumbnail.',
		'requires' => [],
	],
	'wgCommonsMetadataForceRecalculate' => [
		'name' => 'Force Remote Image Description Parsing',
		'from' => 'commonsmetadata',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Set this to true to force CommonsMetadata to parse the description page of the image and extract the metadata when using images from other wikis.',
		'requires' => [],
	],
	'wgFileExtensions' => [
		'name' => 'File Extensions',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'add' => 'add',
			'alist' => 'alist',
			'anim' => 'anim',
			'apk' => 'apk',
			'apng' => 'apng',
			'ascii' => 'ascii',
			'asset' => 'asset',
			'asv' => 'asv',
			'avi' => 'avi',
			'bfwav' => 'bfwav',
			'bib' => 'bib',
			'blend' => 'blend',
			'bmp' => 'bmp',
			'bnk' => 'bnk',
			'bst' => 'bst',
			'bz' => 'bz',
			'bz2' => 'bz2',
			'c' => 'c',
			'cab' => 'cab',
			'cap' => 'cap',
			'cat' => 'cat',
			'cfg' => 'cfg',
			'chr' => 'chr',
			'cls' => 'cls',
			'controller' => 'controller',
			'cpp' => 'cpp',
			'crt' => 'crt',
			'css' => 'css',
			'cue' => 'cue',
			'dae' => 'dae',
			'dat' => 'dat',
			'data' => 'data',
			'desktop' => 'desktop',
			'dia' => 'dia',
			'djvu' => 'djvu',
			'doc' => 'doc',
			'docx' => 'docx',
			'eot' => 'eot',
			'fbx' => 'fbx',
			'fig' => 'fig',
			'fla' => 'fla',
			'flac' => 'flac',
			'fpd' => 'fpd',
			'gb' => 'gb',
			'gba' => 'gba',
			'gbc' => 'gbc',
			'gbs' => 'gbs',
			'gif' => 'gif',
			'gp' => 'gp',
			'gps' => 'gps',
			'gpx' => 'gpx',
			'gz' => 'gz',
			'gz2' => 'gz2',
			'h' => 'h',
			'hes' => 'hes',
			'hpp' => 'hpp',
			'hxx' => 'hxx',
			'ico' => 'ico',
			'ini' => 'ini',
			'ipe' => 'ipe',
			'ips' => 'ips',
			'it' => 'it',
			'jfif' => 'jfif',
			'jpeg' => 'jpeg',
			'jpg' => 'jpg',
			'key' => 'key',
			'lua' => 'lua',
			'm4a' => 'm4a',
			'mat' => 'mat',
			'mbz' => 'mbz',
			'md' => 'md',
			'mid' => 'mid',
			'midi' => 'midi',
			'mma' => 'mma',
			'mmf' => 'mmf',
			'mmt' => 'mmt',
			'mkv' => 'mkv',
			'mod' => 'mod',
			'mov' => 'mov',
			'mp3' => 'mp3',
			'mp4' => 'mp4',
			'mptm' => 'mptm',
			'mus' => 'mus',
			'naf' => 'naf',
			'nes' => 'nes',
			'nsf' => 'nsf',
			'odg' => 'odg',
			'odp' => 'odp',
			'ods' => 'ods',
			'odt' => 'odt',
			'off' => 'off',
			'oga' => 'oga',
			'ogg' => 'ogg',
			'ogv' => 'ogv',
			'ogx' => 'ogx',
			'opk' => 'opk',
			'opus' => 'opus',
			'otf' => 'otf',
			'otg' => 'otg',
			'park' => 'park',
			'parkobj' => 'parkobj',
			'pcap' => 'pcap',
			'pdf' => 'pdf',
			'perf' => 'perf',
			'plot' => 'plot',
			'png' => 'png',
			'pps' => 'pps',
			'ppt' => 'ppt',
			'pptx' => 'pptx',
			'psd' => 'psd',
			'pub' => 'pub',
			'rar' => 'rar',
			'rtf' => 'rtf',
			's3m' => 's3m',
			'sav' => 'sav',
			'sbi' => 'sbi',
			'sc4' => 'sc4',
			'sc6' => 'sc6',
			'scss' => 'scss',
			'sea' => 'sea',
			'sfnt' => 'sfnt',
			'sh' => 'sh',
			'smc' => 'smc',
			'spc' => 'spc',
			'spl' => 'spl',
			'stl' => 'stl',
			'sty' => 'sty',
			'sv4' => 'sv4',
			'sv6' => 'sv6',
			'sv7' => 'sv7',
			'svg' => 'svg',
			'swf' => 'swf',
			'tar' => 'tar',
			'tar.gz' => 'tar.gz',
			'td4' => 'td4',
			'td6' => 'td6',
			'tex' => 'tex',
			'tga' => 'tga',
			'tif' => 'tif',
			'tiff' => 'tiff',
			'trk' => 'trk',
			'ttf' => 'ttf',
			'txt' => 'txt',
			'unity' => 'unity',
			'unitypackage' => 'unitypackage',
			'val' => 'val',
			'vit' => 'vit',
			'vrm' => 'vrm',
			'vsd' => 'vsd',
			'vst' => 'vst',
			'wav' => 'wav',
			'webm' => 'webm',
			'webp' => 'webp',
			'wma' => 'wma',
			'wmv' => 'wmv',
			'woff' => 'woff',
			'woff2' => 'woff2',
			'xcf' => 'xcf',
			'xdelta' => 'xdelta',
			'xls' => 'xls',
			'xlsx' => 'xlsx',
			'xlxs' => 'xlxs',
			'xm' => 'xm',
			'xml' => 'xml',
			'xps' => 'xps',
			'zip' => 'zip',
			'7z' => '7z',
		],
		'overridedefault' => [
			'djvu',
			'gif',
			'ico',
			'jpg',
			'jpeg',
			'ogg',
			'pdf',
			'png',
			'svg',
			'webp',
		],
		'section' => 'media',
		'help' => 'This is the list of preferred extensions for uploading files. Uploading files with extensions not selected in this list will trigger a warning.',
		'requires' => [],
	],
	'wgTmhEnableMp4Uploads' => [
		'name' => 'TimedMediaHandler Enable Mp4 Uploads',
		'from' => 'timedmediahandler',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Allows to upload Mp4 files.',
		'requires' => [],
	],
	'wmgSharedUploadBaseUrl' => [
		'name' => 'Shared Upload Base Url',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'The domain name for the wiki to use as the file repository. Leave empty unless it is a custom domain. By default will be the miraheze subdomain of whatever <code>$wmgSharedUploadDBname</code> is set to below. Do not include https:// or any paths.',
		'requires' => [],
	],
	'wmgSharedUploadClientDBname' => [
		'name' => 'Shared Upload Client Database Name',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'The database name for the wiki to allow to use this wiki as the file repository for that wiki. This value must be a valid Miraheze-hosted wiki database.',
		'requires' => [
			'visibility' => [
				'state' => 'public',
			],
		],
	],
	'wmgSharedUploadDBname' => [
		'name' => 'Shared Upload Database Name',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'The database name for the wiki to use as the file repository. This value must be a valid Miraheze-hosted wiki database. The databse in this field will be used for granting permission from the client database. This <b>can not</b> be a private wiki database.',
		'requires' => [],
	],
	'wmgEnableSharedUploads' => [
		'name' => 'Enable Shared Uploads',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Whether to enable shared uploads from the wiki specified in <code>$wmgSharedUploadDBname</code>.',
		'requires' => [
			'settings' => [
				'dbname' => $wmgSharedUploadDBname ?: '<code>$wmgSharedUploadDBname</code>',
				'setting' => 'wmgSharedUploadClientDBname',
				'value' => $wi->dbname,
			],
		],
	],
	'wgUploadMissingFileUrl' => [
		'name' => 'Upload Missing File Url',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Point wikilinks to missing files ("red file links") to a custom URL.',
		'requires' => [],
	],
	'wgUploadNavigationUrl' => [
		'name' => 'Upload Navigation Url',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Point the upload navigation link in the sidebar to a custom URL.',
		'requires' => [],
	],
	'wmgUploadWizardFlickrApiKey' => [
		'name' => 'Upload Wizard Flickr Api Key',
		'from' => 'uploadwizard',
		'type' => 'text',
		'overridedefault' => 'aeefff139445d825d4460796616f9349',
		'section' => 'media',
		'help' => 'Set a custom Flickr API key for UploadWizard.',
		'requires' => [],
	],

	// Notifications
	'wmgContactPageRecipientUser' => [
		'name' => 'Contact Page Recipient User',
		'from' => 'contactpage',
		'type' => 'user',
		'overridedefault' => null,
		'section' => 'notifications',
		'help' => 'Set to a valid username with a confirmed email. This user will be the recipient user of the ContactPage extension.',
		'requires' => [],
	],
	'wgUsersNotifiedOnAllChanges' => [
		'name' => 'Users Notified On All Changes',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'users',
		'overridedefault' => [],
		'section' => 'notifications',
		'help' => 'Array of usernames who will be sent a notification email for every change which occurs on a wiki.',
		'requires' => [],
	],
	'wgEchoCrossWikiNotifications' => [
		'name' => 'Echo Cross Wiki Notifications',
		'from' => 'echo',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Enable cross-wiki notifications.',
		'requires' => [],
	],
	'wgEchoMentionStatusNotifications' => [
		'name' => 'Echo Mention Status Notifications',
		'from' => 'echo',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Enable mention success/failure notifications.',
		'requires' => [],
	],
	'wgEchoMaxMentionsInEditSummary' => [
		'name' => 'Echo Max Mentions In Edit Summary',
		'from' => 'echo',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 50,
		'overridedefault' => 0,
		'section' => 'notifications',
		'help' => 'Maximum number of users that will be notified that they were linked from an edit summary or 0 for no notifications.',
		'requires' => [],
	],
	'wgEchoWatchlistNotifications' => [
		'name' => 'Echo Watchlist Notifications',
		'from' => 'echo',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Enable watchlist notifications.',
		'requires' => [],
	],
	'wgEchoWatchlistEmailOncePerPage' => [
		'name' => 'Echo Watchlist Email Once Per Page',
		'from' => 'echo',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Whether to send email notifications each time a watched page is edited (if disabled) or only the first time the page is changed before being visited again by the user.',
		'requires' => [],
	],
	'wmgSiteNoticeOptOut' => [
		'name' => 'Opt out of global Miraheze notices',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'notifications',
		'help' => 'Opts your wiki out of global Miraheze notices, only showing important notices.',
		'requires' => [],
	],
	'wgMinervaEnableSiteNotice' => [
		'name' => 'Minerva Sitenotice',
		'from' => 'minervaneue',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Display the Sitenotice on the Minerva skin.',
		'requires' => [],
	],
	'wgDismissableSiteNoticeForAnons' => [
		'name' => 'Dismissable Site Notice For Anons',
		'from' => 'dismissablesitenotice',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'This allows to set whether or not it should be possible for anonymous visitors of the wiki to dismiss the site notice shown.',
		'requires' => [],
	],
	'wgDiscordAdditionalIncomingWebhookUrls' => [
		'name' => 'Discord Additional Incoming Webhook URLs',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'texts',
		'overridedefault' => [],
		'section' => 'notifications',
		'help' => 'Add the URLs of the Discord webhooks to send notifications to. Each URL added will have notifications sent to them simultaneously. These values will be hidden to all users except those with the managewiki right.',
		'requires' => [
			'visibility' => [
				'permissions' => [
					'managewiki-settings',
				],
			],
		],
	],
	'wgDiscordAvatarUrl' => [
		'name' => 'Discord Notification Avatar URL',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'url',
		'overridedefault' => '',
		'section' => 'notifications',
		'help' => 'Avatar to use for messages. If blank, uses the webhook\'s default avatar.',
		'requires' => [],
	],
	'wgDiscordFromName' => [
		'name' => 'Discord Notification Sender Name',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'text',
		'overridedefault' => $wi->sitename,
		'section' => 'notifications',
		'help' => 'Who should the message appear to be sent from?',
		'requires' => [],
	],
	'wgDiscordIgnoreMinorEdits' => [
		'name' => 'Discord Notification Ignore Minor Edits',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'notifications',
		'help' => 'Ignore Minor Edits from Discord feeds?',
		'requires' => [],
	],
	'wgDiscordNotificationBlockedUser' => [
		'name' => 'Discord Notification Blocked User',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Notify on user or IP blocked in MediaWiki?',
		'requires' => [],
	],
	'wgDiscordNotificationNewUser' => [
		'name' => 'Discord Notification New User',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Notify on new user added into MediaWiki?',
		'requires' => [],
	],
	'wgDiscordIncludePageUrls' => [
		'name' => 'Discord Include Page Urls',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Show page URLs "(edit | delete | history)" in notification message?',
		'requires' => [],
	],
	'wgDiscordIncludeUserUrls' => [
		'name' => 'Discord Include User Urls',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Show user URLs "(block | groups | talk | contribs)" in notification message?',
		'requires' => [],
	],
	'wgDiscordIncludeDiffSize' => [
		'name' => 'Discord Include Diff Size',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Show the edit size in notification message?',
		'requires' => [],
	],
	'wgDiscordNotificationMovedArticle' => [
		'name' => 'Discord Notification Moved Article',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Notify on article move?',
		'requires' => [],
	],
	'wgDiscordNotificationFileUpload' => [
		'name' => 'Discord Notification File Upload',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Notify on file upload?',
		'requires' => [],
	],
	'wgDiscordNotificationProtectedArticle' => [
		'name' => 'Discord Notification Protected Article',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Notify when an article is protected?',
		'requires' => [],
	],
	'wgDiscordNotificationAfterImportPage' => [
		'name' => 'Discord Notification After Import Page',
		'from' => 'discordnotifications',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'notifications',
		'help' => 'Notify when a page is imported?',
		'requires' => [],
	],
	'wgHAWelcomeStaffGroupName' => [
		'name' => 'HAWelcome Staff Group Name',
		'from' => 'hawelcome',
		'type' => 'text',
		'overridedefault' => 'sysop',
		'section' => 'notifications',
		'help' => 'The name of the group that can serve as a fallback when no sysops have been active in the last 60 days.',
		'requires' => [],
	],
	'wgHAWelcomeSignatureFromPreferences' => [
		'name' => 'HAWelcome Signature From Preferences',
		'from' => 'hawelcome',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'notifications',
		'help' => 'This configuration variable toggles if the signature of the welcomer should be the one they have set in their preferences.',
		'requires' => [],
	],

	// Permissions
	'wgWhitelistRead' => [
		'name' => 'Whitelist Read',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'wikipages',
		'exists' => false,
		'overridedefault' => [],
		'section' => 'permissions',
		'help' => 'Pages anyone may view.',
		'requires' => [
			'visibility' => [
				'state' => 'private',
			],
		],
	],
	'wgWhitelistReadRegexp' => [
		'name' => 'Whitelist Read Regular Expressions',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'texts',
		'overridedefault' => [],
		'section' => 'permissions',
		'help' => 'Pages that are matched by these regular expressions may be viewed by anyone.',
		'requires' => [
			'visibility' => [
				'state' => 'private',
			],
		],
	],

	// Preferences
	'wgHiddenPrefs' => [
		'name' => 'Hidden Preferences',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'preferences',
		'overridedefault' => [],
		'section' => 'preferences',
		'help' => 'An array of preferences to hide from Special:Preferences.',
		'requires' => [],
	],
	'wgSkipSkins' => [
		'name' => 'Skip Skins',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'skins',
		'overridedefault' => [],
		'section' => 'preferences',
		'help' => 'Array of skins to remove as a choice from user\'s preferences.',
		'requires' => [],
	],
	'wmgVisualEditorEnableDefault' => [
		'name' => 'Make VisualEditor the default editor for all',
		'from' => 'visualeditor',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'preferences',
		'help' => 'This will make VisualEditor the default editor for all. Sets <code>$wgDefaultUserOptions[\'visualeditor-enable\'] = 1;</code> and <code>$wgDefaultUserOptions[\'visualeditor-editor\'] = \'visualeditor\';</code>',
		'requires' => [],
	],
	'wgPopupsHideOptInOnPreferencesPage' => [
		'name' => 'Popups Hide Opt In On Preferences Page',
		'from' => 'popups',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'preferences',
		'help' => 'Whether the option to enable/disable Page Previews should be hidden on Preferences page. Please note if PopupsBetaFeature is set to true this option will be always hidden.',
		'requires' => [],
	],

	// Recent changes
	'wgFeedLimit' => [
		'name' => 'Feed Limit',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 5000,
		'overridedefault' => 50,
		'section' => 'recentchanges',
		'help' => 'Set maximum number of results to return in syndication feeds (RSS, Atom) for eg Recentchanges, Newpages. Min. 1, Max. 5,000',
		'requires' => [],
	],
	'wgRCLinkDays' => [
		'name' => 'RecentChanges Link Days',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'1 (86400 seconds)' => 1,
			'3 (259200 seconds)' => 3,
			'7 (604800 seconds)' => 7,
			'14 (1209600 seconds)' => 14,
			'30 (2592000 seconds)' => 30,
			'60 (5184000 seconds)' => 60,
			'90 (7776000 seconds)' => 90,
			'180 (15552000 seconds)' => 180,
			'360 (31104000 seconds)' => 360,
		],
		'overridedefault' => [ 1, 3, 7, 14, 30 ],
		'section' => 'recentchanges',
		'help' => 'List days options to list in the Special:Recentchanges and Special:Recentchangeslinked pages.',
		'requires' => [],
	],
	'wgRCLinkLimits' => [
		'name' => 'RecentChanges Link Limits',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'50' => 50,
			'100' => 100,
			'250' => 250,
			'500' => 500,
			'1000' => 1000,
			'1500' => 1500,
			'3000' => 3000,
			'5000' => 5000,
			'10000' => 10000,
		],
		'overridedefault' => [ 50, 100, 250, 500 ],
		'section' => 'recentchanges',
		'help' => 'List changes limits options to list in the Special:Recentchanges and Special:Recentchangeslinked pages.',
		'requires' => [],
	],
	'wgCommentsInRecentChanges' => [
		'name' => 'Enable Comments In RecentChanges',
		'from' => 'comments',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'recentchanges',
		'help' => 'Shows comments in the RecentChanges special page.',
		'requires' => [],
	],
	'wgWikiForumLogsInRC' => [
		'name' => 'Display WikiForum logs in RecentChanges',
		'from' => 'wikiforum',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'recentchanges',
		'help' => 'Toggles the display of WikiForum logs in Special:RecentChanges',
		'requires' => [],
	],
	'wgRCWatchCategoryMembership' => [
		'name' => 'Treat Category Membership as a RecentChange',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'recentchanges',
		'help' => 'Shows changes to category membership as an action in Special:RecentChanges',
		'requires' => [],
	],
	'wgUseRCPatrol' => [
		'name' => 'Use RC Patrol',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'recentchanges',
		'help' => 'Use recent changes patrolling to check for vandalism? If disabled, exclamation points will no longer appear in recent changes next to unpatrolled edits.',
		'requires' => [],
	],
	'wgSimpleChangesOnlyContentNamespaces' => [
		'name' => 'Display only content namespaces for Simple Changes',
		'from' => 'simplechanges',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'recentchanges',
		'help' => 'Restricts the list to display only content namespaces',
		'requires' => [],
	],
	'wgSimpleChangesOnlyLatest' => [
		'name' => 'Prevent duplicate titles appearing for Simple Changes',
		'from' => 'simplechanges',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'recentchanges',
		'help' => 'Avoids duplicate titles showing up in the list by only showing changes that match each page&apos;s most recent revision',
		'requires' => [],
	],
	'wgSimpleChangesShowUser' => [
		'name' => 'Display the user name of the user who made the change for Simple Changes',
		'from' => 'simplechanges',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'recentchanges',
		'help' => 'Shows the user name of the user who made the change',
		'requires' => [],
	],

	// Restricted (settings that require the managewiki-restricted right)
	'wgSVGMetadataCutoff' => [
		'name' => 'SVG Metadata Cutoff',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 90000000,
		'overridedefault' => 262144,
		'section' => 'restricted',
		'help' => 'Don\'t read SVG metadata beyond this point.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	'wgRCMaxAge' => [
		'name' => 'RecentChanges max-age',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 62208000,
		'overridedefault' => 180 * 24 * 3600,
		'section' => 'recentchanges',
		'help' => 'Items in the recentchanges table are periodically purged; entries older than this many seconds will be deleted.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	'wgImplicitGroups' => [
		'name' => 'Implicit Groups',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'usergroups',
		'overridedefault' => [
			'*',
			'user',
			'autoconfirmed'
		],
		'section' => 'permissions',
		'help' => 'Groups that aren\'t shown on [[Special:ListUsers]] or somewhere else.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	// If necessary, we can increase maxint.
	'wgMaxArticleSize' => [
		'name' => 'Max Article Size',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 10000,
		'overridedefault' => 2048,
		'section' => 'restricted',
		'help' => 'Maximum page size in kilobytes.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	'wgMaxCredits' => [
		'name' => 'Editing attribution',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => -1,
		'maxint' => 25,
		'overridedefault' => 0,
		'section' => 'restricted',
		'help' => 'Number of editors to attribute.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	'wgHAWelcomeWelcomeUsername' => [
		'name' => 'HAWelcome Welcome Username',
		'from' => 'hawelcome',
		'type' => 'text',
		'overridedefault' => 'HAWelcome',
		'section' => 'restricted',
		'help' => 'This configuration variable contains the name of the user that should leave the welcome message. If this user is flagged as a bot, the edits will be marked as a bot edit. Note: this should not be set to the same name of an existing user.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	'wgExpensiveParserFunctionLimit' => [
		'name' => 'Expensive Parser Function Limit',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 50,
		'maxint' => 500,
		'overridedefault' => 99,
		'section' => 'restricted',
		'help' => 'Number of expensive parser functions allowed on a single page. Min: 50. Max: 500.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],

	// SEO
	'wgDefaultRobotPolicy' => [
		'name' => 'Default Robot Policy',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'index,follow' => 'index,follow',
			'noindex,nofollow' => 'noindex,nofollow',
			'index,nofollow' => 'index,nofollow',
		],
		'overridedefault' => 'index,follow',
		'section' => 'seo',
		'help' => 'Allows specifying the default robot policy for all pages on the wiki.',
		'requires' => [],
	],
	'wgTwitterCardType' => [
		'name' => 'Twitter Card Type (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'list',
		'overridedefault' => 'summery_large_image',
		'section' => 'seo',
		'options' => [
			'Summary' => 'summary',
			'Summary large image' => 'summary_large_image',
		],
		'help' => 'Type of twitter card to use.',
		'requires' => [],
	],
	'wgGoogleSiteVerificationKey' => [
		'name' => 'Google Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Google Search Console.',
		'requires' => [],
	],
	'wgBingSiteVerificationKey' => [
		'name' => 'Bing Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Bing Webmaster Center.',
		'requires' => [],
	],
	'wgFacebookAppId' => [
		'name' => 'Facebook App Id (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'App Id for Facebook Insights.',
		'requires' => [],
	],
	'wgYandexSiteVerificationKey' => [
		'name' => 'Yandex Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Yandex Webmasters.',
		'requires' => [],
	],
	'wgAlexaSiteVerificationKey' => [
		'name' => 'Alexa Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Alexa Console.',
		'requires' => [],
	],
	'wgPinterestSiteVerificationKey' => [
		'name' => 'Pinterest Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Pinterest Console.',
		'requires' => [],
	],
	'wgNaverSiteVerificationKey' => [
		'name' => 'Naver Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Naver.',
		'requires' => [],
	],
	'wgWikiSeoDefaultImage' => [
		'name' => 'Default SEO Image (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => null,
		'section' => 'seo',
		'help' => 'Set a default image to display in embeds if no image is set on the page. Value must be a valid image file in the format of "File.png". If this variable is not set the site\'s logo will be used.',
		'requires' => [],
	],
	'wgWikiSeoDisableLogoFallbackImage' => [
		'name' => 'Disable Logo Fallback Image (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Disable setting the logo as the fallback SEO image if no image was provided.',
		'requires' => [],
	],
	'wgWikiSeoEnableAutoDescription' => [
		'name' => 'Enable Auto Description (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Enable to try to request a description from textextracts, if no description was given, or the description key is set to \'textextracts\'.',
		'requires' => [
			'extensions' => [
				'textextracts',
				'wikiseo',
			],
		],
	],
	'wgWikiSeoTryCleanAutoDescription' => [
		'name' => 'Try Clean Auto Description (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Enable if WikiSEO should try to remove dangling sentences when using descriptions from textextracts.',
		'requires' => [
			'extensions' => [
				'textextracts',
				'wikiseo',
			],
		],
	],
	'wgWikiSeoOverwritePageImage' => [
		'name' => 'Overwrite PageImage (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Enable if WikiSEO should overwrite the iamge set by extension PageImages.',
		'requires' => [
			'extensions' => [
				'pageimages',
				'wikiseo',
			],
		],
	],

	// SocialTools
	'wgCosmosSocialProfileModernTabs' => [
		'name' => 'Cosmos Modern Profile Tabs',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Modern profile tabs for the Cosmos skin when social profile is enabled.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosSocialProfileRoundAvatar' => [
		'name' => 'Cosmos Round Avatar',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Make avatar round on profile pages for the Cosmos skin when social profile is enabled.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosSocialProfileShowEditCount' => [
		'name' => 'Cosmos Show Edit Count',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Show edit count on profile pages for the Cosmos skin when social profile is enabled.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosSocialProfileAllowBio' => [
		'name' => 'Cosmos Allow Bio',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Allow users to add a bio from Special:MyPage/bio and display it on their user page?',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosSocialProfileFollowBioRedirects' => [
		'name' => 'Cosmos Follow Bio Redirects',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Follow redirects from Special:MyPage/bio and display the redirect target as bio instead? (experimental)',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosSocialProfileShowGroupTags' => [
		'name' => 'Cosmos Enable Group Tags',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Show user group tags on profile pages for the Cosmos skin when social profile is enabled.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosUseSocialProfileAvatar' => [
		'name' => 'Cosmos Use Social Profile Avatar',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Use social profile avatar in the top banner for the Cosmos skin when social profile is enabled.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosSocialProfileTagGroups' => [
		'name' => 'Cosmos User Group Tags',
		'from' => 'cosmos',
		'type' => 'usergroups',
		'overridedefault' => [
			'bureaucrat',
			'bot',
			'sysop',
			'interface-admin'
		],
		'section' => 'socialtools',
		'help' => 'User groups to show on profile pages for the Cosmos skin when social profile is enabled. They will be shown in order of priority.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgCosmosSocialProfileNumberofGroupTags' => [
		'name' => 'Cosmos Number of Group Tags',
		'from' => 'cosmos',
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 5,
		'overridedefault' => 2,
		'section' => 'socialtools',
		'help' => 'Number of user group tags to show on profile pages for the Cosmos skin when social profile and the profile group tags are enabled. Min. 1; Max. 5.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'socialprofile',
			],
		],
	],
	'wgShareUseButtons' => [
		'name' => 'Use buttons for sidebar share portlet',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display links in the share sidebar portlet as buttons rather than plainlinks.',
		'requires' => [],
	],
	'wgShareEmail' => [
		'name' => 'Enable Share via Email button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Email button on the sidebar.',
		'requires' => [],
	],
	'wgShareFacebook' => [
		'name' => 'Enable Share via Facebook button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Facebook button on the sidebar.',
		'requires' => [],
	],
	'wgShareLinkedIn' => [
		'name' => 'Enable Share via LinkedIn button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via LinkedIn button on the sidebar.',
		'requires' => [],
	],
	'wgSharePinterest' => [
		'name' => 'Enable Share via Pinterest button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Pinterest button on the sidebar.',
		'requires' => [],
	],
	'wgShareReddit' => [
		'name' => 'Enable Share via Reddit button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Reddit button on the sidebar.',
		'requires' => [],
	],
	'wgShareTelegram' => [
		'name' => 'Enable Share via Telegram button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Telegram button on the sidebar.',
		'requires' => [],
	],
	'wgShareTumblr' => [
		'name' => 'Enable Share via Tumblr button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Tumblr button on the sidebar.',
		'requires' => [],
	],
	'wgShareTwitter' => [
		'name' => 'Enable Share via Twitter button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Twitter button on the sidebar.',
		'requires' => [],
	],
	'wgShareVK' => [
		'name' => 'Enable Share via VK button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via VK button on the sidebar.',
		'requires' => [],
	],
	'wgShareWeibo' => [
		'name' => 'Enable Share via Weibo button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via Weibo button on the sidebar.',
		'requires' => [],
	],
	'wgShareWhatsApp' => [
		'name' => 'Enable Share via WhatsApp button',
		'from' => 'share',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Whether to display a Share via WhatsApp button on the sidebar.',
		'requires' => [],
	],
	'wgRandomGameDisplay' => [
		'name' => 'Random Game Display',
		'from' => 'randomgameunit',
		'type' => 'list-multi-bool',
		'allopts' => [
			'random_poll',
			'random_picturegame',
			'random_quiz',
		],
		'options' => [
			'Poll' => 'random_poll',
			'PictureGame' => 'random_picturegame',
			'Quiz' => 'random_quiz',
		],
		'overridedefault' => [
			'random_picturegame' => false,
			'random_poll' => false,
			'random_quiz' => false,
		],
		'section' => 'socialtools',
		'help' => 'Controls what games are enabled.',
		'requires' => [],
	],
	'wgUserPageChoice' => [
		'name' => 'User Page Choice',
		'from' => 'socialprofile',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Decides whether users should not be able to switch their own user page to be a wiki page, and only the social user profile will be enabled.',
		'requires' => [],
	],
	'wgFriendingEnabled' => [
		'name' => 'Friending Enabled',
		'from' => 'socialprofile',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'socialtools',
		'help' => 'Decides whether to enable friending or not.',
		'requires' => [],
	],
	'wgUserBoard' => [
		'name' => 'User Board',
		'from' => 'socialprofile',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Displays UserBoard-related things on social profile pages.',
		'requires' => [],
	],
	'wgUserProfileDisplay' => [
		'name' => 'User Profile Display',
		'from' => 'socialprofile',
		'type' => 'list-multi-bool',
		'allopts' => [
			'activity',
			'articles',
			'avatar',
			'awards',
			'board',
			'custom',
			'foes',
			'friends',
			'games',
			'gifts',
			'interests',
			'personal',
			'profile',
			'stats',
			'userboxes',
		],
		'options' => [
			'Activity' => 'activity',
			'Articles' => 'articles',
			'Avatar' => 'avatar',
			'Awards' => 'awards',
			'Board' => 'board',
			'Custom' => 'custom',
			'Foes' => 'foes',
			'Friends' => 'friends',
			'Games' => 'games',
			'Gifts' => 'gifts',
			'Interests' => 'interests',
			'Personal' => 'personal',
			'Profile' => 'profile',
			'Stats' => 'stats',
			'Userboxes' => 'userboxes',
		],
		'overridedefault' => [
			'activity' => false,
			'articles' => true,
			'avatar' => true,
			'awards' => true,
			'board' => false,
			'custom' => true,
			'foes' => false,
			'friends' => false,
			'games' => false,
			'gifts' => true,
			'interests' => true,
			'personal' => true,
			'profile' => true,
			'stats' => false,
			'userboxes' => false,
		],
		'section' => 'socialtools',
		'help' => 'Enables default stuff to display on social profile pages by default',
		'requires' => [],
	],
	'wgContribScoreIgnoreBots' => [
		'name' => 'Contrib Score Ignore Bots',
		'from' => 'contributionscores',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'socialtools',
		'help' => 'Exclude bots users from the reporting?',
		'requires' => [],
	],

	// Styling (E.G skins/logos etc)
	'wgDefaultSkin' => [
		'name' => 'Default Skin',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'skin',
		'overridedefault' => 'vector-2022',
		'section' => 'styling',
		'help' => 'Changes the visual interface to the selected skin for all users, however it can be changed through user\'s preferences, unless the skin is added to <code>$wgSkipSkins</code> in the Preferences tab.',
		'requires' => [],
	],
	'wgDefaultMobileSkin' => [
		'name' => 'Default Mobile Skin',
		'from' => 'mobilefrontend',
		'type' => 'skin',
		'overridedefault' => 'minerva',
		'section' => 'styling',
		'help' => 'Changes the default mobile skin to be used by the Mobile Frontend extension. Some skins may not be compatable.',
		'requires' => [],
	],
	'wgLogo' => [
		'name' => 'Logo',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => "https://$wmgUploadHostname/metawiki/3/35/Miraheze_Logo.svg",
		'section' => 'styling',
		'help' => 'This will replace Miraheze\'s default logo. See <a href="https://meta.miraheze.org/wiki/ManageWiki#How_do_I_change_my_logo.2Ffavicon.3F">this link</a> for how you can change it. Also sets the value of <code>$wgLogos[\'1x\']</code>.',
		'requires' => [],
	],
	'wgFavicon' => [
		'name' => 'Favicon',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => '/favicon.ico',
		'section' => 'styling',
		'help' => 'A favicon is a shortcut image that is displayed on your visitor\'s browser address bar and in the bookmarks page. Most often it is a smaller version of the logo. See <a href="https://meta.miraheze.org/wiki/ManageWiki#How_do_I_change_my_logo.2Ffavicon.3F">this link</a> for how you can add one.',
		'requires' => [],
	],
	'wgAppleTouchIcon' => [
		'name' => 'Apple Touch Icon',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => '/apple-touch-icon.png',
		'section' => 'styling',
		'help' => 'Favicon for Apple mobile devices. See <a href="https://meta.miraheze.org/wiki/ManageWiki#How_do_I_change_my_logo.2Ffavicon.3F">this link</a> on how you can add one.',
		'requires' => [],
	],
	'wgWordmark' => [
		'name' => 'Wordmark',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'This will set the value of <code>$wgLogos[\'wordmark\'][\'src\']</code>. Also used as wordmark for the various skins: Minerva copyright wordmark, Timeless mobile wordmark, modern Vector wordmark, and Cosmos wordmark. May be used elsewhere also.',
		'requires' => [],
	],
	'wgWordmarkWidth' => [
		'name' => 'Wordmark Width',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 116,
		'section' => 'styling',
		'help' => 'This will set the width value of the wordmark set by <code>$wgWordmark</code>. For use with the Minerva skin\'s copyright wordmark, this should be set to "116"',
		'requires' => [],
	],
	'wgWordmarkHeight' => [
		'name' => 'Wordmark Height',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 18,
		'section' => 'styling',
		'help' => 'This will set the height value of the wordmark set by <code>$wgWordmark</code>. For use with the Minerva skin\'s copyright wordmark, this should be set to "18"',
		'requires' => [],
	],
	'wgIcon' => [
		'name' => 'Icon',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'A version of the logo without wordmark and tagline.',
		'requires' => [],
	],
	'wgMaxTocLevel' => [
		'name' => 'Max Toc Level',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 99999,
		'overridedefault' => 999,
		'section' => 'styling',
		'help' => 'Maximum indent level of toc.',
		'requires' => [],
	],
	'wmgWikiapiaryFooterPageName' => [
		'name' => 'Wikiapiary Footer Page Name',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => '',
		'section' => 'styling',
		'help' => 'Set to your wiki\'s page name at <a href="https://www.wikiapiary.com">Wikiapiary</a> to add the monitored by Wikiapary footer icon. If you do not have an article there for your wiki, please leave this field blank.',
		'requires' => [],
	],
	'wgCosmosEnabledRailModules' => [
		'associativeKey' => 'recentchanges',
		'name' => 'Cosmos Recent Changes Rail Module',
		'from' => 'cosmos',
		'type' => 'list',
		'options' => [
			'disable' => false,
			'normal' => 'normal',
			'sticky' => 'sticky',
		],
		'overridedefault' => [
			'recentchanges' => 'normal',
			'interface' => [
				'cosmos-custom-rail-module' => 'normal',
				'cosmos-custom-sticky-rail-module' => 'sticky',
			],
		],
		'section' => 'styling',
		'help' => 'Configure the recent changes rail module of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosContentWidth' => [
		'name' => 'Cosmos Content Width',
		'from' => 'cosmos',
		'type' => 'list',
		'options' => [
			'default' => 'default',
			'full' => 'full',
			'large' => 'large',
		],
		'overridedefault' => 'default',
		'section' => 'styling',
		'help' => 'Set the main content area width of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosBackgroundImage' => [
		'name' => 'Cosmos Background Image',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Add an image to set as the background image for the wiki\'s body of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosBackgroundImageSize' => [
		'name' => 'Cosmos Background Image Size',
		'from' => 'cosmos',
		'type' => 'list',
		'options' => [
			'auto' => 'auto',
			'contain' => 'contain',
			'cover' => 'cover',
		],
		'overridedefault' => 'cover',
		'section' => 'styling',
		'help' => 'Add an image to set as the background image for the wiki&apos;s body of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosWikiHeaderBackgroundImage' => [
		'name' => 'Cosmos Wiki Header Background Image',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Add a background image for the wiki header of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosMainBackgroundColor' => [
		'name' => 'Cosmos Main Background Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#1A1A1A',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the background color for the wiki body of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosContentBackgroundColor' => [
		'name' => 'Cosmos Content Background Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#ffffff',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the background color for the content area of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosBannerBackgroundColor' => [
		'name' => 'Cosmos Banner Background Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#c0c0c0',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the background color for the top banner of the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosWikiHeaderBackgroundColor' => [
		'name' => 'Cosmos Wiki Header Background Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#c0c0c0',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the background color of the wiki navigation header on the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosLinkColor' => [
		'name' => 'Cosmos Link Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#0645ad',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the link color for the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosButtonBackgroundColor' => [
		'name' => 'Cosmos Button Background Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#c0c0c0',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the button background color for the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosToolbarBackgroundColor' => [
		'name' => 'Cosmos Toolbar Background Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#000000',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the toolbar background color for the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosFooterBackgroundColor' => [
		'name' => 'Cosmos Footer Background Color',
		'from' => 'cosmos',
		'type' => 'text',
		'overridedefault' => '#c0c0c0',
		'section' => 'styling',
		'help' => 'Add a color name or hex code to set as the footer background color for the Cosmos skin.',
		'requires' => [],
	],
	'wgCosmosBackgroundImageRepeat' => [
		'name' => 'Cosmos Background Image Repeat',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Repeat the background for the cosmos skin?',
		'requires' => [],
	],
	'wgCosmosBackgroundImageFixed' => [
		'name' => 'Cosmos Background Image Fixed',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Make the background for the cosmos skin "position: fixed"?',
		'requires' => [],
	],
	'wgCosmosContentOpacityLevel' => [
		'name' => 'Cosmos Content Opacity Level',
		'from' => 'cosmos',
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 100,
		'overridedefault' => 100,
		'section' => 'styling',
		'help' => 'Set the opacity level of the content area and custom sidebar for the Cosmos skin in precentage.',
		'requires' => [],
	],
	'wgCosmosSearchUseActionAPI' => [
		'name' => 'Cosmos Search Use Action API',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Whether the Codex search of Cosmos should use the MediaWiki action API instead of the REST API.',
		'requires' => [],
	],
	'wgCosmosSearchDescriptionSource' => [
		'name' => 'Cosmos Search Description Source',
		'from' => 'cosmos',
		'type' => 'list',
		'options' => [
			'pagedescription' => 'pagedescription',
			'textextracts' => 'textextracts',
			'wikidata' => 'wikidata',
		],
		'overridedefault' => 'textextracts',
		'section' => 'styling',
		'help' => 'Set the method to extract short description in the Codex search within Cosmos. Will have no effect unless <code>$wgCosmosSearchUseActionAPI</code> is enabled.',
		'requires' => [],
	],
	'wgCosmosMaxSearchResults' => [
		'name' => 'Cosmos Max Search Results',
		'from' => 'cosmos',
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 15,
		'overridedefault' => 6,
		'section' => 'styling',
		'help' => 'Set the maximum number of search results given for the Codex search within Cosmos. Will have no effect unless <code>$wgCosmosSearchUseActionAPI</code> is enabled.',
		'requires' => [],
	],
	'wgCosmosEnablePortableInfoboxEuropaTheme' => [
		'name' => 'Enable Europa Theme for Infoboxes on Cosmos',
		'from' => 'cosmos',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Enable the Europa theme on infoboxes when using the Cosmos skin, if you have the PortableInfobox extension enabled.',
		'requires' => [
			'extensions' => [
				'cosmos',
				'portableinfobox',
			],
		],
	],
	'wgEvelutionLeftPersonalLinks' => [
		'name' => 'Evelution Left Personal Links',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Changes the alignment of the <code>.upper-links</code> container in the personal links from <code>center</code> to <code>left</code>.',
		'requires' => [],
	],
	'wgEvelutionDisableColorManagement' => [
		'name' => 'Evelution Disable Color Management',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Disables access to visual colors and the theme chooser. Likewise, it uses a hardcoded theme with colors taken from system colors.',
		'requires' => [],
	],
	'wgEvelutionDisableRightRail' => [
		'name' => 'Evelution Disable Right Rail',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Disables the right rail that appears on all pages (except special pages, file pages, MediaWiki pages, and the main page).',
		'requires' => [],
	],
	'wgEvelutionServerMode' => [
		'name' => 'Evelution Server Mode',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Changes the layout to be more server/development wiki-friendly (e.g. no desktop local navigation, addition of left actions link before the content (which has the local navigation menus), smaller page header title, full width small breakpoint size, and no right rail on the help and project namespaces).',
		'requires' => [],
	],
	'wgEvelutionStickyRail' => [
		'name' => 'Evelution Sticky Rail',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Removes the sticky behavior of right rail on larger screens with 700 pixels or more. Requires that <code>$wgEvelutionDisableRightRail</code> not be enabled in order for this to work.',
		'requires' => [],
	],
	'wgEvelutionForceFullWidth' => [
		'name' => 'Evelution Force Full Width',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Always forces the content area to its maximum width.',
		'requires' => [],
	],
	'wgEvelutionDisableRightRailFromSpecificPages' => [
		'name' => 'Evelution Disable Right Rail From Specific Pages',
		'from' => 'evelution',
		'type' => 'wikipages',
		'overridedefault' => [],
		'section' => 'styling',
		'help' => 'Disables the right rail that appears on specific pages. Requires that <code>$wgEvelutionDisableRightRail</code> not be enabled in order for this to work.',
		'requires' => [],
	],
	'wgEvelutionMonoLogo' => [
		'name' => 'Evelution Mono Logo',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Makes the wiki\'s logo behave like the wiki\'s wordmark (making it masked so it adapts any color). This is highly recommended for plain black or white logos.',
		'requires' => [],
	],
	'wgEvelutionChangeMessageBoxesToBanners' => [
		'name' => 'Evelution Change Message Boxes To Banners',
		'from' => 'evelution',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'All errorboxes, warningboxes, successboxes and messageboxes except the ones with the <code>.noconvert</code> CSS class will be converted into banner notifications.',
		'requires' => [],
	],
	'wgHasSomeColoursColourOne' => [
		'name' => 'HasSomeColours Colour One',
		'from' => 'hassomecolours',
		'type' => 'text',
		'overridedefault' => '#555',
		'section' => 'styling',
		'help' => 'Primary colour for the HasSomeColours skin, for the header, footer, and various backgrounds.',
		'requires' => [],
	],
	'wgHasSomeColoursColourTwo' => [
		'name' => 'HasSomeColours Colour Two',
		'from' => 'hassomecolours',
		'type' => 'text',
		'overridedefault' => '#d77',
		'section' => 'styling',
		'help' => 'Secondary colour for the HasSomeColours skin, for trim and others.',
		'requires' => [],
	],
	'wgMedikColor' => [
		'name' => 'Medik Color',
		'from' => 'medik',
		'type' => 'text',
		'overridedefault' => '#FFBE00',
		'section' => 'styling',
		'help' => 'The Medik color scheme (navbar background, underlines etc.).',
		'requires' => [],
	],
	'wgMedikShowLogo' => [
		'name' => 'Medik Show Logo',
		'from' => 'medik',
		'type' => 'list',
		'options' => [
			'none' => 'none',
			'main' => 'main',
			'sidebar' => 'sidebar'
		],
		'overridedefault' => 'none',
		'section' => 'styling',
		'help' => 'Show logo in the navbar or in the sidebar. By default, the logo is hidden.',
		'requires' => [],
	],
	'wgMedikLogoWidth' => [
		'name' => 'Medik Logo Width',
		'from' => 'medik',
		'type' => 'text',
		'overridedefault' => 'default',
		'section' => 'styling',
		'help' => 'Width of the logo in the main navbar (i.e. you have to set <code>$wgMedikShowLogo</code> to <code>\'main\'</code> first).',
		'requires' => [],
	],
	'wgMedikUseLogoWithoutText' => [
		'name' => 'Medik Use Logo Without Text',
		'from' => 'medik',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Use only logo and hide the site name in the left upper corner of the wiki.',
		'requires' => [],
	],
	'wgMedikResponsive' => [
		'name' => 'Medik Responsive',
		'from' => 'medik',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'If you need to disable the responsiveness of the skin (i.e. you don\'t want the skin to adjust to the screen size), set this to false.',
		'requires' => [],
	],
	'wgMedikContentWidth' => [
		'name' => 'Medik Content Width',
		'from' => 'medik',
		'type' => 'list',
		'options' => [
			'default' => 'default',
			'full' => 'full',
			'narrow' => 'narrow',
			'wide' => 'wide'
		],
		'overridedefault' => 'default',
		'section' => 'styling',
		'help' => 'At large screens, the main content container (with articles, texts, etc.) is 9/12 of the screen width and sidebar menu takes 2/12 of the screen width. It means that 1/12 of the screen width on the right side remains white. This is the default and looks good. But there can be cases when you need your wiki to extend to the full width of the screen even on the large screens. Then you can and set this to \'full\'. Then the main content container will take 10/12 of the screen width (and 2/12 remain for the sidebar menu). If you need a narrow main content area, use \'narrow\' instead. Then the main content container will take 8/12 of the screen width (and 2/12 remain for the sidebar menu on the left and 2/12 for the white space on the right). If you need a wide main content with only a narrow left sidebar, use \'wide\'. Then the sidebar will be 1/12 and the main content 10/12 on large screens.',
		'requires' => [],
	],
	'wgTimelessBackdropImage' => [
		'name' => 'Timeless Backdrop Image',
		'from' => 'timeless',
		'global' => true,
		'type' => 'text',
		'overridedefault' => 'cat.svg',
		'section' => 'styling',
		'help' => 'Set to the filename, excluding the File namespace, of a background image to use for the Timeless skin.',
		'requires' => [],
	],
	'wgTimelessLogo' => [
		'name' => 'Timeless Logo',
		'from' => 'timeless',
		'global' => true,
		'type' => 'text',
		'overridedefault' => null,
		'section' => 'styling',
		'help' => 'Set to the filename, excluding the File namespace, of a logo to use for the Timeless skin.',
		'requires' => [],
	],
	'wgTimelessWordmark' => [
		'name' => 'Timeless Wordmark',
		'from' => 'timeless',
		'global' => true,
		'type' => 'text',
		'overridedefault' => null,
		'section' => 'styling',
		'help' => 'Set to the filename, excluding the File namespace, of a wordmark to use for the Timeless skin.',
		'requires' => [],
	],
	'wgMetrolookDownArrow' => [
		'name' => 'Metrolook Down Arrow',
		'from' => 'metrolook',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'This configuration variable has to be true for the tiles to be generated.',
		'requires' => [],
	],
	'wgMetrolookUploadButton' => [
		'name' => 'Metrolook Upload Button',
		'from' => 'metrolook',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'When enabled, an "Upload file" link is generated in the top menu bar, before the content-specific action links ("History", "Discussion", etc.)',
		'requires' => [],
	],
	'wgMetrolookBartile' => [
		'name' => 'Metrolook Bartile',
		'from' => 'metrolook',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'When "Metrolook Down Arrow" is enabled and "Metrolook Bartile" is enabled, the tile menu will be generated from <a href="/wiki/MediaWiki:Metrolook-tiles">MediaWiki:Metrolook-tiles</a>. If "Metrolook Down Arrow" is not set and "Metrolook Bartile" is not set, then the tile menu will be generated from <a href="/wiki/MediaWiki:Metrolook-tiles-second">MediaWiki:Metrolook-tiles-second</a>.',
		'requires' => [],
	],
	'wgMetrolookMobile' => [
		'name' => 'Metrolook Mobile',
		'from' => 'metrolook',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'When enabled, makes the UI responsive on mobiles.',
		'requires' => [],
	],
	'wgMetrolookUseIconWatch' => [
		'name' => 'Metrolook Use Icon Watch',
		'from' => 'metrolook',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'When enabled, it uses an icon for the watch/unwatch button.',
		'requires' => [],
	],
	'wgMetrolookLine' => [
		'name' => 'Metrolook Line',
		'from' => 'metrolook',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'If not set, then the img.line element (white divider line in the top menu, between the site name and the down arrow/"Upload file" link) won\'t be generated.',
		'requires' => [],
	],
	'wgVectorResponsive' => [
		'name' => 'Vector Responsive',
		'from' => 'vector',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Turn Vector-2022 into a responsive skin by applying a view port and disabling the min-width?',
		'requires' => [],
	],
	'wgCitizenThemeDefault' => [
		'name' => 'Citizen Theme Default',
		'from' => 'citizen',
		'type' => 'list',
		'options' => [
			'auto' => 'auto',
			'dark' => 'dark',
			'light' => 'light',
		],
		'overridedefault' => 'auto',
		'section' => 'styling',
		'help' => 'The default theme of the citizen skin.',
		'requires' => [],
	],
	'wgCitizenEnableCollapsibleSections' => [
		'name' => 'Citizen Enable Collapsible Sections',
		'from' => 'citizen',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Enables or disable collapsible sections on content pages.',
		'requires' => [],
	],
	'wgCitizenGlobalToolsPortlet' => [
		'name' => 'Citizen Global Tools Portlet',
		'from' => 'citizen',
		'type' => 'text',
		'overridedefault' => '',
		'section' => 'styling',
		'help' => 'ID of the portlet to attach the global tools',
		'requires' => [],
	],
	'wgCitizenShowPageTools' => [
		'name' => 'Citizen Show Page Tools',
		'from' => 'citizen',
		'type' => 'list',
		'options' => [
			'true' => 1,
			'login' => 'login',
			'permission' => 'permission',
		],
		'overridedefault' => 1,
		'section' => 'styling',
		'help' => 'The condition of page tools visibility.',
		'requires' => [],
	],
	'wgCitizenThemeColor' => [
		'name' => 'Citizen Theme Color',
		'from' => 'citizen',
		'type' => 'text',
		'overridedefault' => '#131a21',
		'section' => 'styling',
		'help' => 'The color defined in the <code>theme-color</code> meta tag.',
		'requires' => [],
	],
	'wgCitizenSearchGateway' => [
		'name' => 'Citizen Search Gateway',
		'from' => 'citizen',
		'type' => 'list',
		'options' => [
			'Action API' => 'mwActionApi',
			'REST API' => 'mwRestApi',
		],
		'overridedefault' => 'mwActionApi',
		'section' => 'styling',
		'help' => 'Which gateway to use for fetching search suggestion',
		'requires' => [],
	],
	'wgCitizenSearchDescriptionSource' => [
		'name' => 'Citizen Search Description Source',
		'from' => 'citizen',
		'type' => 'list',
		'options' => [
			'TextExtracts' => 'textextracts',
			'ShortDescription/Wikidata' => 'wikidata',
			'Description2/WikiSEO' => 'pagedescription',
		],
		'overridedefault' => 'textextracts',
		'section' => 'styling',
		'help' => 'Source of description text on search suggestions',
		'requires' => [],
	],
	'wgCitizenMaxSearchResults' => [
		'name' => 'Citizen Max Search Results',
		'from' => 'citizen',
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 15,
		'overridedefault' => 6,
		'section' => 'styling',
		'help' => 'Max number of search suggestions',
		'requires' => [],
	],
	'wgCitizenEnableCJKFonts' => [
		'name' => 'Citizen Enable CJK fonts',
		'from' => 'citizen',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Enable included Noto Sans CJK for wikis that serves CJK languages',
		'requires' => [],
	],
	'wgRelatedArticlesFooterAllowedSkins' => [
		'name' => 'RelatedArticles Footer Allowed Skins',
		'from' => 'relatedarticles',
		'type' => 'skins',
		'overridedefault' => [
			'citizen',
			'cosmos',
			'minerva',
			'timeless',
			'vector',
			'vector-2022',
		],
		'section' => 'styling',
		'help' => 'Skins where related articles will be shown in the footer.',
		'requires' => [],
	],
	'wgAllowUserCss' => [
		'name' => 'Allow User Css',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Allow user Cascading Style Sheets (CSS). For example User:<user>/*.css.',
		'requires' => [],
	],
	'wgAllowUserJs' => [
		'name' => 'Allow User Js',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Allow user JavaScript pages. For example User:<user>/*.js.',
		'requires' => [],
	],
	'wgUseCustomLandingPageStyles' => [
		'name' => 'Use Custom Landing Page Styles',
		'from' => 'articlecreationworkflow',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Whether to load custom CSS for the ArticleCreationWorkflow landing page.',
		'requires' => [],
	],
	'wgDefaultTheme' => [
		'name' => 'Default Theme',
		'from' => 'theme',
		'type' => 'list',
		'options' => [
			'Default' => 'default',
			'Dark (Monobook and Vector only)' => 'dark',
			'Deepsea (Vector only)' => 'deepsea',
			'Pink (Monobook only)' => 'pink',
			'Stellarbook (Monobook only)' => 'stellarbook',
		],
		'overridedefault' => 'default',
		'section' => 'styling',
		'help' => 'Sets which theme is displayed by default when users visit your wiki.',
		'requires' => [],
	],
	'wmgShowPopupsByDefault' => [
		'name' => 'Show Popups by default',
		'from' => 'popups',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'When enabled, this shows Popups by default.',
		'requires' => [],
	],
	'wgScratchBlocks4BlockVersion' => [
		'name' => 'Default Scratch Blocks version',
		'from' => 'scratchblocks',
		'type' => 'integer',
		'minint' => 2,
		'maxint' => 3,
		'overridedefault' => 3,
		'section' => 'styling',
		'help' => 'Version of ScratchBlocks to show when the version attribute has not been defined.',
		'requires' => [],
	],
	'wgTweekiSkinUseBootstrap4' => [
		'name' => 'Use Bootstrap 4 for Tweeki',
		'from' => 'tweeki',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Set this variable to true if you want to use Boostrap 4 instead of Bootstrap 3. Note that there are changes in the markup!',
		'requires' => [],
	],
	'wgTweekiSkinImagePageTOCTabs' => [
		'name' => 'Togglable Tabs On File Pages (Tweeki)',
		'from' => 'tweeki',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Set to true, if you want file pages to be rendered as togglable tabs.',
		'requires' => [],
	],
	'wgTweekiSkinFooterIcons' => [
		'name' => 'Use icons in Tweeki footer',
		'from' => 'tweeki',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'If set to false, the icons in the footer will be replaced by text aquivalents.',
		'requires' => [],
	],
	'wgTweekiSkinUseBtnParser' => [
		'name' => 'Allow btn tag (Tweeki)',
		'from' => 'tweeki',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Whether or not to parse the <btn>-Tag',
		'requires' => [],
	],
	'wgTweekiSkinUseTooltips' => [
		'name' => 'Use bootstrap tooltips (Tweeki)',
		'from' => 'tweeki',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Whether or not to use Bootstrap\'s tooltips for buttons using the data-toggle="tooltip" attribute.',
		'requires' => [],
	],
	'wgTweekiSkinUseIconWatch' => [
		'name' => 'Use Star Icon for Watchlist (Tweeki)',
		'from' => 'tweeki',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Watch and unwatch as an icon rather than a link.',
		'requires' => [],
	],
	'wgDarkModeTogglePosition' => [
		'name' => 'Dark mode toggle link position',
		'from' => 'darkmode',
		'type' => 'list',
		'options' => [
			'Next to the user talk page link in personal URLs' => 'personal',
			'In the footer, usually after the "Disclaimer" link.' => 'footer',
			'In the sidebar within the navigation portlet.' => 'sidebar',
		],
		'overridedefault' => 'personal',
		'section' => 'styling',
		'help' => 'Where the dark mode toggle link should be placed.',
		'requires' => [],
	],
	'egChameleonLayoutFile' => [
		'name' => 'Chameleon layout file',
		'from' => 'chameleon',
		'type' => 'list',
		'options' => [
			'standard' => '/srv/mediawiki/config/chameleon-layouts/standard.xml',
			'navhead' => '/srv/mediawiki/config/chameleon-layouts/navhead.xml',
			'fixedhead' => '/srv/mediawiki/config/chameleon-layouts/fixedhead.xml',
			'stickyhead' => '/srv/mediawiki/config/chameleon-layouts/stickyhead.xml',
			'clean' => '/srv/mediawiki/config/chameleon-layouts/clean.xml',
		],
		'overridedefault' => '/srv/mediawiki/config/chameleon-layouts/standard.xml',
		'section' => 'styling',
		'help' => 'The layout to use for the Chameleon skin.',
		'requires' => [],
	],
	'egChameleonEnableExternalLinkIcons' => [
		'name' => 'Chameleon external link icons',
		'from' => 'chameleon',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'Whether or not to show the normal MediaWiki external link icon when using the Chameleon skin.',
		'requires' => [],
	],

	// Wikibase
	'wmgWikibaseRepoUrl' => [
		'name' => 'Repository URL',
		'from' => 'wikibaseclient',
		'type' => 'url',
		'overridedefault' => 'https://wikidata.org',
		'section' => 'wikibase',
		'help' => 'URL of the Wikibase repository the client should connect to.',
		'requires' => [],
	],
	'wmgWikibaseRepoDatabase' => [
		'name' => 'Repository Database',
		'from' => 'wikibaseclient',
		'type' => 'database',
		'overridedefault' => $wi->dbname,
		'section' => 'wikibase',
		'help' => 'Database identifier of the repository being used. This value must be a valid Miraheze-hosted wiki database.',
		'requires' => [],
	],
	'wmgAllowEntityImport' => [
		'name' => 'Allow Entity Import',
		'from' => 'wikibaserepository',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'Allow importing entities via Special:Import and importDump.php.',
		'requires' => [],
	],
	'wmgCanonicalUriProperty' => [
		'name' => 'Canonical Uri Property',
		'from' => 'wikibaserepository',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'Property to be used on properties that defines a URI pattern which is used to link external identifiers in RDF and other exports.',
		'requires' => [],
	],
	'wmgEnableEntitySearchUI' => [
		'name' => 'Enable Entity Search UI',
		'from' => 'wikibaserepository',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'To determine if entity search UI should be enabled or not.',
		'requires' => [],
	],
	'wmgFederatedPropertiesEnabled' => [
		'name' => 'Enable Federated Properties',
		'from' => 'wikibaserepository',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'To determine if federated properties should be enabled or not.',
		'requires' => [],
	],
	'wgWBQualityConstraintsEnableSuggestionConstraintStatus' => [
		'name' => 'Enable Suggestion Constraint Status',
		'from' => 'wikibasequalityconstraints',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'Whether to enable the \'constraint suggestion\' constraint status or not. This is a temporary configuration that will be removed once constraint suggestions are permanently enabled on Wikidata.',
		'requires' => [],
	],
	'wmgFormatterUrlProperty' => [
		'name' => 'Formatter Url Property',
		'from' => 'wikibaserepository',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'Property to be used on properties that defines a formatter URL which is used to link external identifiers.',
		'requires' => [],
	],
	'wgPropertySuggesterMinProbability' => [
		'name' => 'Property Suggester Min Probability',
		'from' => 'propertysuggester',
		'type' => 'float',
		'overridedefault' => 0.05,
		'section' => 'wikibase',
		'help' => 'A float that sets a minimum threshold for suggestions.',
		'requires' => [],
	],
	'wgPropertySuggesterDeprecatedIds' => [
		'name' => 'Property Suggester Deprecated Ids',
		'from' => 'propertysuggester',
		'type' => 'integers',
		'overridedefault' => [],
		'section' => 'wikibase',
		'help' => 'A list of properties that won\'t be used for suggestions.',
		'requires' => [],
	],
	'wgPropertySuggesterClassifyingPropertyIds' => [
		'name' => 'Property Suggester Classifying Property Ids',
		'from' => 'propertysuggester',
		'type' => 'integers',
		'overridedefault' => [],
		'section' => 'wikibase',
		'help' => 'A list of classifying properties.',
		'requires' => [],
	],
	'wgPropertySuggesterInitialSuggestions' => [
		'name' => 'Property Suggester Initial Suggestions',
		'from' => 'propertysuggester',
		'type' => 'integers',
		'overridedefault' => [],
		'section' => 'wikibase',
		'help' => 'A list of properties that will be suggested when no statements exist.',
		'requires' => [],
	],
	'wgLexemeLanguageCodePropertyId' => [
		'name' => 'Lexeme Language Code Property Id',
		'from' => 'wikibaselexeme',
		'type' => 'text',
		'overridedefault' => null,
		'section' => 'wikibase',
		'help' => 'Specify the Lexeme language code property.',
		'requires' => [],
	],
	'wgLexemeEnableDataTransclusion' => [
		'name' => 'Lexeme Enable Data Transclusion',
		'from' => 'wikibaselexeme',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'Whether to enable Lexeme data transclusion.',
		'requires' => [],
	],
	'wgUnlinkedWikibaseBaseUrl' => [
		'name' => 'Unlinked Wikibase base URL',
		'from' => 'unlinkedwikibase',
		'type' => 'url',
		'overridedefault' => 'https://www.wikidata.org/wiki/',
		'section' => 'wikibase',
		'help' => 'The base URL of the Wikibase site to use.',
		'requires' => [],
	],
	'wgUnlinkedWikibaseBaseQueryEndpoint' => [
		'name' => 'Unlinked Wikibase Query Endpoint',
		'from' => 'unlinkedwikibase',
		'type' => 'url',
		'overridedefault' => 'https://query.wikidata.org/bigdata/namespace/wdq/sparql',
		'section' => 'wikibase',
		'help' => 'The query service Sparql endpoint',
		'requires' => [],
	],
	'wgUnlinkedWikibaseStatementsParserFunc' => [
		'name' => 'Enable Statements parser function for UnlinkedWikibase',
		'from' => 'unlinkedwikibase',
		'type' => 'check',
		'overridedefault' => 'false',
		'section' => 'wikibase',
		'help' => 'Allow the use of <code>{{#statements:}}</code> parser functions with UnlinkedWikibase.',
		'requires' => [],
	],
	'wgWBQualityConstraintsInstanceOfId' => [
		'name' => 'Instance Of Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P31',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'instance of\' property (data type => item), which specifies the class(es) of an item.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSubclassOfId' => [
		'name' => 'Subclass Of Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P279',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'subclass of\' property (data type => item), which specifies the superclass(es) of an item.',
		'requires' => [],
	],
	'wgWBQualityConstraintsPropertyConstraintId' => [
		'name' => 'Property Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2302',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'property constraint\' property (data type => item), which specifies the various constraints of a property.',
		'requires' => [],
	],
	'wgWBQualityConstraintsExceptionToConstraintId' => [
		'name' => 'Exception To Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2303',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'exception to constraint\' property (data type => item), which specifies the exceptions of a constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsConstraintStatusId' => [
		'name' => 'Constraint Status Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2316',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'constraint status\' property (data type => item), which specifies the constraint status of a constraint statement. Currently, only one constraint status is known (see wgWBQualityConstraintsMandatoryConstraintId), and the default status is signified by the absence of a \'constraint status\' qualifier.',
		'requires' => [],
	],
	'wgWBQualityConstraintsMandatoryConstraintId' => [
		'name' => 'Mandatory Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21502408',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'mandatory constraint\' item, which, when used in a \'constraint status\' qualifier of a \'property constraint\' statement on a property, indicates that the constraint is mandatory and should have no violations except for the known exceptions.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSuggestionConstraintId' => [
		'name' => 'Suggestion Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q62026391',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'suggestion constraint\' item, which, when used in a \'constraint status\' qualifier of a \'property constraint\' statement on a property, indicates that the constraint is merely a suggestion for improvement and violations need not be taken very seriously.',
		'requires' => [],
	],
	'wgWBQualityConstraintsDistinctValuesConstraintId' => [
		'name' => 'Distinct Values Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21502410',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'distinct values constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that all values for this property should differ from each other, or, equivalently, that each value for this property should be unique to one item.',
		'requires' => [],
	],
	'wgWBQualityConstraintsMultiValueConstraintId' => [
		'name' => 'Multi Value Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510857',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'multi-value constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that a property should have more than one value per entity.',
		'requires' => [],
	],
	'wgWBQualityConstraintsUsedAsQualifierConstraintId' => [
		'name' => 'Used As Qualifier Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510863',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'used as qualifier constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that a property should only be used as a qualifier.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSingleValueConstraintId' => [
		'name' => 'Single Value Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q19474404',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'single value constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that a property should have no more than one value per entity.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSymmetricConstraintId' => [
		'name' => 'Symmetric Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510862',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'symmetric constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that a referenced entity should refer back to the original entity.',
		'requires' => [],
	],
	'wgWBQualityConstraintsTypeConstraintId' => [
		'name' => 'Type Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21503250',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'type constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the subject entity should have a certain type, with the relation and type given in the parameters.',
		'requires' => [],
	],
	'wgWBQualityConstraintsValueTypeConstraintId' => [
		'name' => 'Value Type Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510865',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'value type constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the referenced entity should have a certain type, with the class and relation given in the parameters.',
		'requires' => [],
	],
	'wgWBQualityConstraintsInverseConstraintId' => [
		'name' => 'Inverse Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510855',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'inverse constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that a referenced entity should refer back to the original entity with the property given in the parameters.',
		'requires' => [],
	],
	'wgWBQualityConstraintsItemRequiresClaimConstraintId' => [
		'name' => 'Item Requires Claim Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21503247',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'item requires claim constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that an entity with a given statement should also have certain other statements.',
		'requires' => [],
	],
	'wgWBQualityConstraintsValueRequiresClaimConstraintId' => [
		'name' => 'Value Requires Claim Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510864',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'value requires claim constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the target/value entity of a given statement should have certain statements.',
		'requires' => [],
	],
	'wgWBQualityConstraintsConflictsWithConstraintId' => [
		'name' => 'Conflicts With Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21502838',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'conflicts-with constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that an entity with a given statement should not have certain other statements.',
		'requires' => [],
	],
	'wgWBQualityConstraintsOneOfConstraintId' => [
		'name' => 'One Of Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510859',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'one-of constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should be one of a given set of values.',
		'requires' => [],
	],
	'wgWBQualityConstraintsMandatoryQualifierConstraintId' => [
		'name' => 'Mandatory Qualifier Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510856',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'mandatory qualifier\' item, which, when used in a \'property constraint\' statement on a property, indicates a given statement should have the given qualifier.',
		'requires' => [],
	],
	'wgWBQualityConstraintsAllowedQualifiersConstraintId' => [
		'name' => 'Allowed Qualifiers Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510851',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'allowed qualifiers constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates a given statement should only have the given qualifiers.',
		'requires' => [],
	],
	'wgWBQualityConstraintsRangeConstraintId' => [
		'name' => 'Range Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510860',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'range constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should be within a given range.',
		'requires' => [],
	],
	'wgWBQualityConstraintsDifferenceWithinRangeConstraintId' => [
		'name' => 'Difference Within Range Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510854',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'difference within range constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the difference value of a given statement and of another given statement should be within a given range.',
		'requires' => [],
	],
	'wgWBQualityConstraintsCommonsLinkConstraintId' => [
		'name' => 'Commons Link Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21510852',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'commons link constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should be a valid link to Wikimedia Commons.',
		'requires' => [],
	],
	'wgWBQualityConstraintsContemporaryConstraintId' => [
		'name' => 'Contemporary Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q25796498',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'contemporary constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the entities which are linked through this property should be contemporary according to their start and end time values.',
		'requires' => [],
	],
	'wgWBQualityConstraintsFormatConstraintId' => [
		'name' => 'Format Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21502404',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'format constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should conform to a given pattern.',
		'requires' => [],
	],
	'wgWBQualityConstraintsUsedForValuesOnlyConstraintId' => [
		'name' => 'Used For Values Only Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21528958',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'used for values only constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property should only be used for the main value of a statement, not for qualifiers or references.',
		'requires' => [],
	],
	'wgWBQualityConstraintsUsedAsReferenceConstraintId' => [
		'name' => 'Used As Reference Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21528959',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'used as reference constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property should only be used for references, not for the main value of a statement or for qualifiers.',
		'requires' => [],
	],
	'wgWBQualityConstraintsNoBoundsConstraintId' => [
		'name' => 'No Bounds Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q51723761',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'no bounds constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property should only be used with no bounded quantity as its value.',
		'requires' => [],
	],
	'wgWBQualityConstraintsAllowedUnitsConstraintId' => [
		'name' => 'Allowed Units Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21514353',
		'section' => 'wikibase',
		'help' => 'The item ID for the \'allowed units constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should only have certain units.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSingleBestValueConstraintId' => [
		'name' => 'Single Best Value Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q52060874',
		'section' => 'wikibase',
		'help' => 'The item ID for the \'single best value constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property should have a single, distinguished best value per item.',
		'requires' => [],
	],
	'wgWBQualityConstraintsAllowedEntityTypesConstraintId' => [
		'name' => 'Allowed Entity Types Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q52004125',
		'section' => 'wikibase',
		'help' => 'The item ID for the \'allowed entity types constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property can be used only in certain entity types (e.g. only items).',
		'requires' => [],
	],
	'wgWBQualityConstraintsCitationNeededConstraintId' => [
		'name' => 'Citation Needed Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q54554025',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'citation needed constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should have at least one reference for its values.',
		'requires' => [],
	],
	'wgWBQualityConstraintsPropertyScopeConstraintId' => [
		'name' => 'Property Scope Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q53869507',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'property scope constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property should only be used in some locations (main value, qualifiers, and/or references, but not all of them).',
		'requires' => [],
	],
	'wgWBQualityConstraintsLexemeLanguageConstraintId' => [
		'name' => 'Lexeme Language Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q55819106',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'lexeme language constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property should only be used in lexeme that have the given language set.',
		'requires' => [],
	],
	'wgWBQualityConstraintsLabelInLanguageConstraintId' => [
		'name' => 'Label In Language Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q108139345',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'label in language constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the property should only be used in entities that have label in the given languages.',
		'requires' => [],
	],
	'wgWBQualityConstraintsLanguagePropertyId' => [
		'name' => 'Language Property Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P424',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'Wikimedia language code\' property (data type => string), which specifies the language code of a \'label in language\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsClassId' => [
		'name' => 'Class Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2308',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'class\' property (data type => item), which specifies the class/type of a \'type\' or \'value type\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsRelationId' => [
		'name' => 'Relation Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2309',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'relation\' property (data type => item), which specifies the relation (\'instance of\' or \'subclass of\') of a \'type\' or \'value type\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsInstanceOfRelationId' => [
		'name' => 'Instance Of Relation Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21503252',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'instance of\' item, which, when used in a \'relation\' qualifier of a \'property constraint\' statement on a property, indicates that the \'type\' or \'value type\' constraint defined in this statement demands an \'instance\' relation.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSubclassOfRelationId' => [
		'name' => 'Subclass Of Relation Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q21514624',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'subclass of\' item, which, when used in a \'relation\' qualifier of a \'property constraint\' statement on a property, indicates that the \'type\' or \'value type\' constraint defined in this statement demands a \'subclass\' relation.',
		'requires' => [],
	],
	'wgWBQualityConstraintsInstanceOrSubclassOfRelationId' => [
		'name' => 'Instance Or Subclass Of Relation Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q30208840',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'instance or subclass of\' item, which, when used in a \'relation\' qualifier of a \'property constraint\' statement on a property, indicates that the \'type\' or \'value type\' constraint defined in this statement demands a \'instance or subclass\' relation.',
		'requires' => [],
	],
	'wgWBQualityConstraintsPropertyId' => [
		'name' => 'Property Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2306',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'property\' property (data type => property), which specifies the property parameter of an \'inverse\', \'item requires claim\', \'value requires claim\', \'difference within range\', \'mandatory qualifiers\', or \'qualifiers\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsQualifierOfPropertyConstraintId' => [
		'name' => 'Qualifier Of Property Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2305',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'qualifier of property constraint\' property (data type => item), which specifies the item parameter of an \'item requires claim\', \'value requires claim\', or \'one of\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsMinimumQuantityId' => [
		'name' => 'Minimum Quantity Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2313',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'minimum quantity\' property (data type => quantity), which specifies the minimum quantity parameter of a \'range\' or \'diff within range\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsMaximumQuantityId' => [
		'name' => 'Maximum Quantity Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2312',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'maximum quantity\' property (data type => quantity), which specifies the maximum quantity parameter of a \'range\' or \'diff within range\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsMinimumDateId' => [
		'name' => 'Minimum Date Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2310',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'minimum date\' property (data type => point in time), which specifies the minimum date parameter of a \'range\' or \'diff within range\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsMaximumDateId' => [
		'name' => 'Maximum Date Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2311',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'maximum date\' property (data type => point in time), which specifies the maximum date parameter of a \'range\' or \'diff within range\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsNamespaceId' => [
		'name' => 'Namespace Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2307',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'namespace\' property (data type => string), which specifies the namespace parameter of a \'commons link\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsFormatAsARegularExpressionId' => [
		'name' => 'Format As A Regular Expression Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P1793',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'format as a regular expression\' property (data type => string), which specifies the format parameter of a \'format\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSyntaxClarificationId' => [
		'name' => 'Syntax Clarification Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P2916',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'syntax clarification\' property (data type => monolingual text), which specifies human-readable explanations of a \'format\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsConstraintScopeId' => [
		'name' => 'Constraint Scope Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P4680',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'constraint scope\' property (data type => item), which specifies the context(s) in which a constraint is checked.',
		'requires' => [],
	],
	'wgWBQualityConstraintsConstraintEntityTypesId' => [
		'name' => 'Constraint Entity Types Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P4680',
		'section' => 'wikibase',
		'help' => 'The property ID of the property (data type => item) which specifies the entity types on which a constraint is checked. By default, this is the same as the \'constraint scope\' property, but may also be set to a different one. The recognized values (items representing entity types) are the same as for the \'allowed entity types\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsSeparatorId' => [
		'name' => 'Separator Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P4155',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'separator\' property (data type => property), which specifies the allowed separator(s) for “single value” and “single best value” constraints.',
		'requires' => [],
	],
	'wgWBQualityConstraintsConstraintCheckedOnMainValueId' => [
		'name' => 'Constraint Checked On Main Value Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q46466787',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'constraint checked on main value\' item, which, when used in a \'constraint scope\' qualifier of a \'property constraint\' statement on a property, indicates that the constraint should be checked on the main snak of a statement.',
		'requires' => [],
	],
	'wgWBQualityConstraintsConstraintCheckedOnQualifiersId' => [
		'name' => 'Constraint Checked On Qualifiers Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q46466783',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'constraint checked on qualifiers\' item, which, when used in a \'constraint scope\' qualifier of a \'property constraint\' statement on a property, indicates that the constraint should be checked on the qualifier snaks of a statement.',
		'requires' => [],
	],
	'wgWBQualityConstraintsConstraintCheckedOnReferencesId' => [
		'name' => 'Constraint Checked On References Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q46466805',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'constraint checked on references\' item, which, when used in a \'constraint scope\' qualifier of a \'property constraint\' statement on a property, indicates that the constraint should be checked on the reference snaks of a statement.',
		'requires' => [],
	],
	'wgWBQualityConstraintsNoneOfConstraintId' => [
		'name' => 'None Of Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q52558054',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'none-of constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should not be one of a given set of values.',
		'requires' => [],
	],
	'wgWBQualityConstraintsIntegerConstraintId' => [
		'name' => 'Integer Constraint Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q52848401',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'integer constraint\' item, which, when used in a \'property constraint\' statement on a property, indicates that the value of a given statement should have only integer values.',
		'requires' => [],
	],
	'wgWBQualityConstraintsWikibaseItemId' => [
		'name' => 'Wikibase Item Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q29934200',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'wikibase item\' item, which represents the \'item\' entity type for \'allowed entity types\' constraints.',
		'requires' => [],
	],
	'wgWBQualityConstraintsWikibasePropertyId' => [
		'name' => 'Wikibase Property Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q29934218',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'wikibase property\' item, which represents the \'property\' entity type for \'allowed entity types\' constraints.',
		'requires' => [],
	],
	'wgWBQualityConstraintsWikibaseLexemeId' => [
		'name' => 'Wikibase Lexeme Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q51885771',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'wikibase lexeme\' item, which represents the \'lexeme\' entity type for \'allowed entity types\' constraints.',
		'requires' => [],
	],
	'wgWBQualityConstraintsWikibaseFormId' => [
		'name' => 'Wikibase Form Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q54285143',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'wikibase form\' item, which represents the \'form\' entity type for \'allowed entity types\' constraints.',
		'requires' => [],
	],
	'wgWBQualityConstraintsWikibaseSenseId' => [
		'name' => 'Wikibase Sense Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q54285715',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'wikibase sense\' item, which represents the \'sense\' entity type for \'allowed entity types\' constraints.',
		'requires' => [],
	],
	'wgWBQualityConstraintsWikibaseMediaInfoId' => [
		'name' => 'Wikibase Media Info Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q59712033',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'wikibase MediaInfo\' item, which represents the \'mediainfo\' entity type for \'allowed entity types\' constraints.',
		'requires' => [],
	],
	'wgWBQualityConstraintsPropertyScopeId' => [
		'name' => 'Property Scope Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'P5314',
		'section' => 'wikibase',
		'help' => 'The property ID of the \'property scope\' property, which specifies the scope parameter of a \'scope\' constraint.',
		'requires' => [],
	],
	'wgWBQualityConstraintsAsMainValueId' => [
		'name' => 'As Main Value Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q54828448',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'as main value\' item, which, when used in a \'property scope\' parameter of a \'scope\' constraint, signifies that a property may be used for the main snaks of statements.',
		'requires' => [],
	],
	'wgWBQualityConstraintsAsQualifiersId' => [
		'name' => 'As Qualifiers Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q54828449',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'as qualifiers\' item, which, when used in a \'property scope\' parameter of a \'scope\' constraint, signifies that a property may be used for qualifiers of statements.',
		'requires' => [],
	],
	'wgWBQualityConstraintsAsReferencesId' => [
		'name' => 'As References Id',
		'from' => 'wikibasequalityconstraints',
		'type' => 'text',
		'overridedefault' => 'Q54828450',
		'section' => 'wikibase',
		'help' => 'The item ID of the \'as references\' item, which, when used in a \'property scope\' parameter of a \'scope\' constraint, signifies that a property may be used for references of statements.',
		'requires' => [],
	],
	'wmgWikibaseItemNamespaceID' => [
		'name' => 'Item Namespace ID',
		'from' => 'wikibaseclient',
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 0,
		'section' => 'wikibase',
		'help' => 'Namespace ID of the Item namespace on the upstream Wikibase installation. Leave as-is if unsure.',
		'requires' => [],
	],
	'wmgWikibasePropertyNamespaceID' => [
		'name' => 'Property Namespace ID',
		'from' => 'wikibaseclient',
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 120,
		'section' => 'wikibase',
		'help' => 'Namespace ID of the Property namespace on the upstream Wikibase installation. Leave as-is if unsure.',
		'requires' => [],
	],
	'wmgWikibaseRepoItemNamespaceID' => [
		'name' => 'Repository Item Namespace ID',
		'from' => 'wikibaserepository',
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 860,
		'section' => 'wikibase',
		'help' => 'Namespace ID of the Item namespace for Wikibase Repository.',
		'requires' => [],
	],
	'wmgWikibasePropertyNamespaceID' => [
		'name' => 'Repository Property Namespace ID',
		'from' => 'wikibaserepository',
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 862,
		'section' => 'wikibase',
		'help' => 'Namespace ID of the Property namespace for Wikibase Repository.',
		'requires' => [],
	],
	'wgArticlePlaceholderImageProperty' => [
		'name' => 'Article Placeholder Image Property',
		'from' => 'articleplaceholder',
		'type' => 'text',
		'overridedefault' => 'P18',
		'section' => 'wikibase',
		'help' => 'Sets the property used to display the main image of an item.',
		'requires' => [],
	],
	'wgArticlePlaceholderSearchEngineIndexed' => [
		'name' => 'Article Placeholder Search Engine Indexed',
		'from' => 'articleplaceholder',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'wikibase',
		'help' => 'Configures whether placeholders will be indexable by search engines. Setting it to true will unconditionally enable indexing, while setting it to false will disable indexing.',
		'requires' => [],
	],
	'wgArticlePlaceholderReferencesBlacklist' => [
		'name' => 'Article Placeholder References Blacklist',
		'from' => 'articleplaceholder',
		'type' => 'text',
		'overridedefault' => 'P143',
		'section' => 'wikibase',
		'help' => 'Takes a property ID and blacklists the references that use the given property.',
		'requires' => [],
	],
	'wgArticlePlaceholderRepoApiUrl' => [
		'name' => 'Article Placeholder Repo API URL',
		'from' => 'articleplaceholder',
		'type' => 'text',
		'overridedefault' => 'https://www.wikidata.org/w/api.php',
		'section' => 'wikibase',
		'help' => 'Sets the property used to display the main image of an item.',
		'requires' => [],
	],
	'wgInterwikiSortingSort' => [
		'name' => 'Interwiki Sorting Sort',
		'from' => 'interwikisorting',
		'type' => 'list',
		'options' => [
			'alphabetic' => 'alphabetic',
			'alphabetic_fy' => 'alphabetic_fy',
			'alphabetic_revised' => 'alphabetic_revised',
			'alphabetic_sr' => 'alphabetic_sr',
			'alphabetic_sv' => 'alphabetic_sv',
			'code' => 'code',
		],
		'overridedefault' => 'code',
		'section' => 'wikibase',
		'help' => 'The default sort order to use. The default, \'code\' orders alphabetically by interwiki code.',
		'requires' => [],
	],
];

if ( $wi->isAllOfExtensionsActive( 'Gamepress', 'Theme' ) ) {
	$wgManageWikiSettings['wgDefaultTheme']['options']['Blue (Gamepress only)'] = 'blue';
	$wgManageWikiSettings['wgDefaultTheme']['options']['Green (Gamepress only)'] = 'green';
	$wgManageWikiSettings['wgDefaultTheme']['options']['Orange (Gamepress only)'] = 'orange';
}
